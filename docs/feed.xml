<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"
    xmlns:dc="http://purl.org/dc/elements/1.1/">
    <channel>
        <title>Yet Another Lambda Blog</title>
        <link>https://jstolarek.github.io</link>
        <description><![CDATA[A language that doesn't affect the way you think about programming, is not worth knowing]]></description>
        <atom:link href="https://jstolarek.github.io/feed.xml" rel="self"
                   type="application/rss+xml" />
        <lastBuildDate>Wed, 12 Jul 2023 00:00:00 UT</lastBuildDate>
        <item>
    <title>All the things I've ever done wrong with my websites</title>
    <link>https://jstolarek.github.io/posts/2023-07-12-all-the-things-ive-ever-done-wrong-with-my-websites.html</link>
    <description><![CDATA[<article>
    <section class="header">
        Posted on 12/07/2023
    </section>
    <section>
        <h1 id="all-the-things-ive-ever-done-wrong-with-my-websites">All the things I’ve ever done wrong with my websites</h1>
<p>This post has been long in the making. I started writing it in March, and now,
four months later, it is finally finished. I was inspired by Fabien Sanglard’s
<a href="https://fabiensanglard.net/html/index.html">post about technical aspects of his
blog</a> and it made me reflect on all
my past and present web sites and things I did wrong when creating and hosting
them. I’ve been maintaining some form of online presence, whether a homepage, a
blog, or a fansite, for the past 23 years so there was a lot to reflect on.
Here’s a chronological list.</p>
<h2 id="fremen-zone">Fremen Zone</h2>
<p>This will be a trip down memory lane. Fremen Zone was my fansite dedicated to
Frank Herbert’s “Dune” novel and related works such as games and movies. I
started it when I was in high school back in 1999. By that time I already knew
how to program, but creating web sites was a new thing for me. I wanted both to
share my fascination with the Dune universe as well as learn how to create web
pages. This was also the time when lots of online portals offered free hosting.
In the west this was typically GeoCities, but here in Poland I used Onet. When
signing up one would not only get an email address but also a few megabytes of
disk space to host a website. I know that by today’s standards 2 or 5
megabytes is laughably low, but back then it was more than enough. Later in its
lifetime Fremen Zone changed hosting and included some multimedia downloads,
growing the page size to a total of around 75 megabytes.</p>
<p>Fremen Zone was initially intended to be dedicated to the Dune II strategy game.
A very rough first prototype looked like this (this is the highest resolution
screenshot I have):</p>
<div class="thumbnail">
<figure>
<img src="/images/posts/2023-07-12-all-the-things-ive-ever-done-wrong-with-my-websites/fz_proto_1.png" />
<figcaption>
First prototype.
</figcaption>
</figure>
</div>
<p>It was quickly discarded and replaced with another prototype, this time with
scope extended to contain the books. As you can see the working name of the
website was also different:</p>
<div class="thumbnail">
<figure>
<img src="/images/posts/2023-07-12-all-the-things-ive-ever-done-wrong-with-my-websites/fz_proto_2.png" />
<figcaption>
Second prototype.
</figcaption>
</figure>
</div>
<p>Both prototypes were created using Microsoft FrontPage, a WYSIWYG HTML editor.
However, I quickly realized that, firstly, I am not learning much by using this
kind of tool and, secondly, that the generated HTML is bloated and unlikely to
work on web browsers other than Internet Explorer, such as Netscape Navigator.
As a result I switched to writing HTML and CSS by hand. The results were very
good and I think they still hold up well even today:</p>
<div class="thumbnail">
<figure>
<img src="/images/posts/2023-07-12-all-the-things-ive-ever-done-wrong-with-my-websites/fz_old.jpg" />
<figcaption>
Fremen Zone displayed in Internet Explorer sometime in the early noughties.
</figcaption>
</figure>
</div>
<p>Fremen Zone went online in June 2000. The process of first creating and then
maintaining it was a lot different from what we do today. First and foremost, I
didn’t have Internet access at home. This meant I had to update all the files
in advance and then upload them when visiting my dad’s work during the weekend.
These weekend visits were also the only time when I could browse the Internet to
find any information for the website, although this wasn’t a big problem since
practically all of the content was created by me based on reading the books,
playing the games, and watching the movies. The only significant exception were
reviews of the last three books in the original Dune cycle, which I have not yet
read when I started creating Fremen Zone. Luckily, Dune was quite a popular
books amongst my peers and a friend of mine who read all the books agreed to
provide missing reviews. With no Internet access at home this was a
logistically complicated process, since said friend lived in a different part of
city. We spent a long time on the phone discussing the books, the page, and
writing reviews, which resulted in phone bills going up significantly. Again,
not a trivial problem in late 90s Poland. I also mentioned that Fremen Zone
contained some downloads. These included, among others, Dune and Dune II games,
which back then were considered abandonware<a href="#fn1" class="footnote-ref" id="fnref1" role="doc-noteref"><sup>1</sup></a>.</p>
<p>Fremen Zone was last updated in 2004. At some point there wasn’t much more to
write about and the page simply existed without any supervision. It eventually
withered away and disappeared when its free hosting was closed down. I have no
recollection of when that happened. A copy of the website has been sitting on
my hard drive all this time and as I was writing this post I thought to myself
“why not bring Fremen Zone” back to life? <a href="https://jstolarek.github.io/fremenzone/">And so I
did</a>. Using GitHub as a hosting
service it took two afternoons to put it online. In fact it could have been
hosted as it was, but I wanted to move away from ISO-8859-2 and CP-1250
encodings in favour of UTF-8. I also wanted to replace self-extracting RAR
archives with ZIP ones.</p>
<div class="thumbnail">
<figure>
<a href="/images/posts/2023-07-12-all-the-things-ive-ever-done-wrong-with-my-websites/fz_today.png"><img src="/images/posts/2023-07-12-all-the-things-ive-ever-done-wrong-with-my-websites/fz_today_thumbnail.jpg" /></a>
<figcaption>
Revived Fremen Zone hosted on GitHub Pages.
</figcaption>
</figure>
</div>
<p>In retrospect I am very happy about how the Fremen Zone turned out. The fact
that after over two decades the page “just works” shows how future-proof pure
that HTML and CSS are. Perhaps the only complaint that could be made is that it
doesn’t look good on mobile devices, but honestly speaking I couldn’t care less
about that. When it comes to the Fremen Zone I can proudly say I made no
mistakes. As you will see below this is not the case for my other websites.</p>
<p>Lessons learned:</p>
<ul>
<li>Filling the website with content is lots of fun.</li>
<li>Hand-written HTML and CSS are great, though full-scale redesigns are
tedious.</li>
</ul>
<h2 id="evolutionary-biology-blog-at-blogger.com">Evolutionary biology blog at blogger.com</h2>
<p>Towards the end of my university studies I picked interest in evolutionary
biology. I read lots of books on the subject and I have to credit works of
Charles Darwin, Richard Dawkins, and E. O. Wilson as being the biggest influence
in forming my approach to research and science in general. (For the record, I
studied computer science, not biology.) I decided to turn that fascination of
biology into a blog. It contained mostly reviews of popular science books about
biology, myrmecology, cognitive science, and occasionally modern physics and
cosmology.</p>
<p>I decided to host my blog using one of many blogging services available in the
noughties. After some consideration I went with Google’s Blogger, with first
post being published in 2008. Blogger is designed as a user-friendly CMS with
some (limited) options to customise layout. Post editing is done using an
online WYSIWYG editor, with everything being saved immediately (at least in
theory). Over time I grew to dislike that editor. It isn’t a horribly bad
experience but editing inside a text field embedded in a browser window is far
from being the best possible experience. There was always the option to switch
it to pure HTML mode, but as you might guess two modes weren’t perfectly
compatible as code generated from the editor wasn’t exactly what one would write
by hand, and conversely, code written by hand sometimes wasn’t parsed correctly
in WYSIWYG mode.</p>
<p>In the end I think the biggest problem with Blogger was taking ownership of
created content. There is the ever-looming threat of service joining the
<a href="https://killedbygoogle.com/">Google Graveyard</a>. Although Blogger allows to
export all posts to an XML file, it seems to be only able to export text, with
all images being lost in the export process.</p>
<p>Lessons learned:</p>
<ul>
<li>Do not use a service that doesn’t allow you to export all created content.
Always make sure to own everything that you created. Ideally, don’t depend
on an external service at all.</li>
<li>Online WYSIWYG editors are somewhat inconvenient.</li>
<li>Blogging is fun.</li>
</ul>
<h2 id="professional-homepage-version-1-plain-html">Professional homepage, version 1: plain HTML</h2>
<p>In late 2008 I started my work at Politechnika Łódzka<a href="#fn2" class="footnote-ref" id="fnref2" role="doc-noteref"><sup>2</sup></a> (PŁ for short). Back
then PŁ didn’t have a unified online learning platform and so each employee used
their personal web page to provide learning materials for the students. I had
to create such a page for myself and since I needed it ASAP I chose the easiest
solution: hand-written HTML with practically no CSS, other than white
background. The page wasn’t fancy but it did the job of delivering basic
information.</p>
<p>Lessons learned:</p>
<ul>
<li>Again, hand-written HTML and CSS are great.</li>
</ul>
<h2 id="professional-homepage-version-2-dokuwiki">Professional homepage, version 2: DokuWiki</h2>
<p>That first version of my professional homepage was intended to be a temporary
solution but in the end it lasted for about 3 years until 2011. What made me
move on was reading <a href="https://pragprog.com/titles/ahptl/pragmatic-thinking-and-learning/">“Pragmatic Thinking and
Learning”</a>,
which convinced me that it is a good idea to have a personal wiki to organize my
research. One of my colleagues pointed me to DokuWiki, which he described as a
lightweight wiki being solely based on markdown-formatted text files and thus
requiring no database. This convinced me. No database requirement made it easy
to set up, and versatility of configuration made it possible to tweak everything
to my liking. From now on DokuWiki acted both as my official homepage,
containing information for students and my research portfolio, as well as my
personal wiki, which was hidden behind a login. I could now organize all my
research notes into pages and the ease of doing that meant I was now making a
lot more notes than I used to. I also really liked plugin support. One of the
plugins allowed to me have both Polish and English version of each publicly
visible subpage. Another provided LaTeX support, allowing to render formulas
related to wavelet transforms.</p>
<div class="thumbnail">
<figure>
<a href="/images/posts/2023-07-12-all-the-things-ive-ever-done-wrong-with-my-websites/dokuwiki_homepage.png"><img src="/images/posts/2023-07-12-all-the-things-ive-ever-done-wrong-with-my-websites/dokuwiki_homepage_thumbnail.png" /></a>
<figcaption>
My old homepage running on DokuWiki.
</figcaption>
</figure>
</div>
<p>While at first I was quite impressed with DokuWiki, over time I realized that it
doesn’t quite live up to the promise of its storage being entirely text based.
While the current content of all the pages is indeed stored in text files, under
the hood DokuWiki maintains history of all the edits (after all, it is designed
to host a wiki) as well as an elaborate system of all sorts of caches and
indices. This means that editing the text files directly instead of using the
HTML editor can potentially get you into trouble with internal data consistency.
And while above I stated how DokuWiki made it easy to make notes, over time my
workflow evolved towards being terminal-based and at this point using a separate
browser-embedded editor to take notes became a problem. Moreover, all the
caches and historical records are binary files and therefore storing sources of
the website in a version control system was also a bit of a problem.</p>
<p>Lessons learned:</p>
<ul>
<li>Having a personal wiki is a fantastic idea. However, it must be possible to
easily integrate the process of taking notes with the rest of my workflow.
Therefore, HTML editors suck.</li>
</ul>
<h2 id="yet-another-lambda-blog">Yet Another Lambda Blog</h2>
<p>When I got into functional programming back in 2012 I thought it would be a
great idea to also run a blog on the topic. Aside from the fact that I enjoy
sharing my knowledge with others, a blog would also serve a similar purpose as
the personal wiki. It would be a place where I can record my knowledge for
future purposes<a href="#fn3" class="footnote-ref" id="fnref3" role="doc-noteref"><sup>3</sup></a>. I have already learned that relying on an external blog
hosting service is not a good idea - I already knew I want full ownership of the
content I create - so I decided to go with self-hosting and set up a blog CMS
along with my homepage on my university’s server. Today I can safely say that
while the assumptions were good, the execution was not: I went with Wordpress.</p>
<p>Wordpress seemed like a good choice due to amount of offered features, both
built-in and available via additional plugins. A variety of themes meant I had
no problem adjusting the looks of the blog to my liking. Similarly to Blogger,
Wordpress offered an online WYSIWYG, which at this point I was still willing to
tolerate. What proved to be the biggest downside was the maintenance burden.
Firstly, since the instance was self-hosted, I was responsible for keeping my
installation up-to-date. Most updates went fine, but some did not and I found
myself spending hours trying to recover from a failed update. An unexpected
obstacle came from my hosting, which turned out to be using an extremely old
release of <a href="https://www.pld-linux.org/">PLD Linux</a> with a woefully out-of-date
PHP version that has not received any security updates for about a decade. At
some point this became a problem since Wordpress bumped their minimal required
PHP version and I was no longer able to update my installation. This is a big
deal. Due to its popularity, Wordpress installations, especially those outdated
ones without security fixes, are a common target for hacker attacks. Moreover,
spambots are a major issue, with spam making up over 99,99% of all comments. In
order to manage this spam you either turn off comments completely or use a
plugin for filtering spam (I used Akismet). Lastly, there’s the issue of
backups. Wordpress has plugins that allow you to backup all of your
installation, but moving contents backed up this way to a different installation
is not a straightforward task. Or at least was not straightforward last time I
tried it - perhaps things have improved?</p>
<p>Overall, using a self-hosted Wordpress installation was a major pain with lots
of time spent on maintenance. Even though I now owned all the content I
created, the fact that it was all stored in a database made it difficult to
backup or migrate.</p>
<div class="thumbnail">
<figure>
<a href="/images/posts/2023-07-12-all-the-things-ive-ever-done-wrong-with-my-websites/yalb.png"><img src="/images/posts/2023-07-12-all-the-things-ive-ever-done-wrong-with-my-websites/yalb_thumbnail.png" /></a>
<figcaption>
Yet Another Lambda Blog running on Wordpress.
</figcaption>
</figure>
</div>
<p>Lessons learned:</p>
<ul>
<li>Self-hosting a large CMS is difficult and time consuming.</li>
<li>Database is a major source of problems.</li>
<li>Comment system is a major source of pain.</li>
<li>Blogging is still fun.</li>
</ul>
<h2 id="cyberbrain4-gollum-based-personal-wiki">Cyberbrain<a href="#fn4" class="footnote-ref" id="fnref4" role="doc-noteref"><sup>4</sup></a>: gollum-based personal wiki</h2>
<p>At some point I have found myself no longer using my personal wiki. It’s not
that I stopped using it suddenly. It just happened gradually over time. This
really surprised me, since a personal wiki is a Good Thing and many times have I
been grateful for taking the time to write down various things that I’ve
learned. After thinking about it for a while I realized the cause: I really
hated the online interface. It was slow and completely disconnected from my
workflow: I spent 90% of my work time in the terminal, using Emacs in text mode
as my editor. Making notes in the wiki meant switching to the browser and using
a completely different way of editing text than the one I use normally. This
was too heavyweight and requires too large a context switch.</p>
<p>The solution to this problem came in the form of
<a href="https://github.com/gollum/gollum/">gollum</a>. Gollum is a markdown based wiki
engine that can run as a local service on my machine. And this time “markdown
based” really means what it means - no weird caching or indexing like in
DokuWiki. Gollum requires that the wiki is stored in a git repository and as
such all history is recorded outside of the wiki engine itself. In fact, most
of you have likely already seen gollum in action as it is the engine that was
originally created to power GitHub wikis<a href="#fn5" class="footnote-ref" id="fnref5" role="doc-noteref"><sup>5</sup></a>. Multiple markdown flavours are
supported, but the DokuWiki one isn’t, so I had to migrate all notes I already
had on my personal wiki.</p>
<p>Once migration was done I had a perfect wiki. All my notes are now stored in
Markdown files (GitHub Markdown with minor tweaks and enhancements) organized in
directories. Since it’s Markdown it is easy to edit in Emacs, which allows me
to seamlessly integrate taking notes with programming. In fact, for most of the
time I view my notes in Emacs. I switch to a web browser view of the wiki only
when I need to retrieve information which location in the wiki I am unsure of
and I need to click through several pages in order to find it. This doesn’t
happen too often since I try to keep my wiki organized. At the moment all my
notes total at 1.5MB - and that’s just text-based Markdown files, excluding any
multimedia or git history - so it is crucial that they are all well structured.
Moreover, storing everything in a git repository is now not only a natural thing
to do, but in fact mandatory. To simplify my workflow with the wiki even
further I created a <code>Makefile</code> with following contents:</p>
<div class="sourceCode" id="cb1"><pre class="sourceCode makefile"><code class="sourceCode makefile"><span id="cb1-1"><a href="#cb1-1" aria-hidden="true" tabindex="-1"></a><span class="dv">all:</span></span>
<span id="cb1-2"><a href="#cb1-2" aria-hidden="true" tabindex="-1"></a>       git add .</span>
<span id="cb1-3"><a href="#cb1-3" aria-hidden="true" tabindex="-1"></a>       git commit -m <span class="st">&quot;Local changes (via Makefile)&quot;</span> || exit 0</span>
<span id="cb1-4"><a href="#cb1-4" aria-hidden="true" tabindex="-1"></a></span>
<span id="cb1-5"><a href="#cb1-5" aria-hidden="true" tabindex="-1"></a><span class="ot">.PHONY:</span><span class="dt"> all</span></span></code></pre></div>
<p>which allows me to commit all changes to my wiki by pressing F8 in Emacs.
Granted, the commit message is not descriptive, but in all honesty I don’t think
I ever found myself referring to my wiki’s history.</p>
<div class="thumbnail">
<figure>
<a href="/images/posts/2023-07-12-all-the-things-ive-ever-done-wrong-with-my-websites/gollum.png"><img src="/images/posts/2023-07-12-all-the-things-ive-ever-done-wrong-with-my-websites/gollum_thumbnail.png" /></a>
<figcaption>
My new personal wiki running on local instance of gollum.
</figcaption>
</figure>
</div>
<p>Lessons learned:</p>
<ul>
<li>Personal wiki is essential for a programmer.</li>
<li>For a personal wiki it suffices to have it hosted locally.</li>
<li>Markdown is a good and lightweight way of taking notes.</li>
<li>It is important to minimize context switch between doing productive work and
taking notes.</li>
</ul>
<h2 id="professional-homepage-with-a-blog-version-3-hakyll-github-pages">Professional homepage with a blog, version 3: Hakyll + GitHub pages</h2>
<p>After switching to gollum I was still using DokuWiki to run my professional
homepage. That page, as well as Wordpress-based Yet Another Lambda Blog, came
to an end in 2021. After spending 13 years at my University I decided to change
jobs, which meant losing access to my hosting. I had to migrate everything
somewhere else.</p>
<p>All my experiences so far lead me to one conclusion: the simpler the better. I
didn’t want anything that uses a database. I didn’t want a comment system. I
wanted to store everything in a simple text-based format that is easy to migrate
and store in a git repository. This left me with two choices: either plain
HTML+CSS or a Markdown-based solution. I wasn’t yet ready to return to using
HTML. After considering my options I decided to go with
<a href="https://jaspervdj.be/hakyll/">Hakyll</a>, a static HTML generator inspired by
Jekyll, but written in Haskell.</p>
<p>I wanted to combine my professional homepage with a blog. This meant migrating
already existing DokuWiki pages, which was simple since I already knew how to
handle this from earlier migration to gollum, but it also meant migrating from
Wordpress to Markdown. This was a bigger problem, but luckily I found a tool
that did 90% of the job of converting existing blog posts to Markdown. There
were still cleanups and tweaks here and there, in particular when it came to
images and footnotes. The process was tedious but overall not that long.</p>
<p>There was a bunch of other stuff that had to be set up in Hakyll, from RSS feed
to creating templates and metadata for blog pages, and various rules defining
how and where to put various files (in particular images). Luckily, Hakyll
documentation and online examples were helpful, and after about a week of work
the migration was complete. You are most likely viewing the result right now,
but in case another migration happens in the future here’s a screenshot:</p>
<div class="thumbnail">
<figure>
<a href="/images/posts/2023-07-12-all-the-things-ive-ever-done-wrong-with-my-websites/hakyll.png"><img src="/images/posts/2023-07-12-all-the-things-ive-ever-done-wrong-with-my-websites/hakyll_thumbnail.png" /></a>
<figcaption>
Current homepage and blog built with Hakyll.
</figcaption>
</figure>
</div>
<p>Overall, once setup Hakyll is easy to use and does the job. It still has its
downsides though. Firstly, it is a rather heavyweight technology in a sense
that it requires full Haskell toolchain to be installed in the system, plus a
bunch of library dependencies. I am a Haskell programmer so I tend to have
Haskell compiler at hand, but this is no small requirement. And being
Markdown-based leads to limitations that you’re going to hit sooner or later.
For me this happened when I decided I want to have captioned images that can be
enlarged with a click. To achieve the desired effect I had to mix HTML with
Markdown and write some extra CSS to ensure images display correctly on mobile
devices. So whenever I want to insert an image I have to write something like
this:</p>
<div class="sourceCode" id="cb2"><pre class="sourceCode html"><code class="sourceCode html"><span id="cb2-1"><a href="#cb2-1" aria-hidden="true" tabindex="-1"></a><span class="kw">&lt;div</span> <span class="er">class</span><span class="ot">=</span><span class="st">&quot;thumbnail&quot;</span><span class="kw">&gt;</span></span>
<span id="cb2-2"><a href="#cb2-2" aria-hidden="true" tabindex="-1"></a><span class="kw">&lt;figure&gt;</span></span>
<span id="cb2-3"><a href="#cb2-3" aria-hidden="true" tabindex="-1"></a>[![](/images/posts/2023-07-12-all-the-things-ive-ever-done-wrong-with-my-websites/hakyll_thumbnail.png)](/images/posts/2023-07-12-all-the-things-ive-ever-done-wrong-with-my-websites/hakyll.png)</span>
<span id="cb2-4"><a href="#cb2-4" aria-hidden="true" tabindex="-1"></a><span class="kw">&lt;figcaption&gt;</span>Current homepage and blog built with Hakyll.<span class="kw">&lt;/figcaption&gt;</span></span>
<span id="cb2-5"><a href="#cb2-5" aria-hidden="true" tabindex="-1"></a><span class="kw">&lt;/figure&gt;</span></span>
<span id="cb2-6"><a href="#cb2-6" aria-hidden="true" tabindex="-1"></a><span class="kw">&lt;/div&gt;</span></span></code></pre></div>
<p>Lessons learned:</p>
<ul>
<li>Static site generation is great.</li>
<li>Markdown is good enough for basic formatting, but sooner or later you hit
its limitations.</li>
</ul>
<h2 id="what-next">What next?</h2>
<p>At the moment the only active web page that I maintain is this blog running on
Hakyll. Once set up it is easy to work with and allows me to do everything I
need. That being said, I am not happy about Hakyll’s weight, in particular its
dependence on a plethora of Haskell libraries. It was trivially simple to bring
Fremen Zone back to life after two decades of no maintenance. Will it be
equally easy to restore this blog in two decades time? I have serious doubts
about that, but nevertheless have no intention of migrating to anything else.
For now.</p>
<p>Restoring the Fremen Zone back to life sparked a new desire in me. While I said
I have no intention of updating it, I feel like re-doing the whole site from
scratch. All the reviews on the page were written from a perspective of a
teenager. Today, being middle-aged, I view most of things surprisingly
similarly, but would definitely make a better choice of words in expressing
myself. And so I am slowly gathering material for a new Dune fanpage. All the
lessons above have taught me to avoid complexity and stay as close to the basics
as possible. And so my plan is to create a new website based on pure HTML and
CSS. This will take some learning effort. I haven’t used these technologies in
a while and they have evolved in the past two decades, in particular when it
comes to handling mobile devices. My experience with creating Fremen Zone 20
years ago taught me that creating content is a time consuming process, and
therefore I am assuming this new website will take years, rather than months, to
complete.</p>
<section id="footnotes" class="footnotes footnotes-end-of-document" role="doc-endnotes">
<hr />
<ol>
<li id="fn1"><p>I think they still are abandonware? I don’t think there is any legal way
of obtaining them, except for second-hand market.<a href="#fnref1" class="footnote-back" role="doc-backlink">↩︎</a></p></li>
<li id="fn2"><p>Official English translations of “Politechnika Łódzka” changed over time.
When I started my work it was Technical University of Lodz but sometime
around 2013, I think, it changed to Lodz University of Technology.<a href="#fnref2" class="footnote-back" role="doc-backlink">↩︎</a></p></li>
<li id="fn3"><p>I can’t overstate how good a thing this is. I have revisited some of my
blog entries and found them extremely helpful and was grateful to myself
that I took the time to write them.<a href="#fnref3" class="footnote-back" role="doc-backlink">↩︎</a></p></li>
<li id="fn4"><p>The term “cyberbrain” comes from Ghost in the Shell and refers to
cybernetic brain replacements used in the manga and its anime adaptation.<a href="#fnref4" class="footnote-back" role="doc-backlink">↩︎</a></p></li>
<li id="fn5"><p>I am not sure whether this is still the case. Based on bits and pieces of
information I was able to find on the Internet I think gollum and the
engine that currently powers GitHub wikis are technically separate
codebases, but gollum strives to remain fully compatible with GitHub.<a href="#fnref5" class="footnote-back" role="doc-backlink">↩︎</a></p></li>
</ol>
</section>

        <p><a href="../blog.html">Back</a></p>
    </section>
</article>
]]></description>
    <pubDate>Wed, 12 Jul 2023 00:00:00 UT</pubDate>
    <guid>https://jstolarek.github.io/posts/2023-07-12-all-the-things-ive-ever-done-wrong-with-my-websites.html</guid>
    <dc:creator>Jan Stolarek</dc:creator>
</item>
<item>
    <title>More GameBoy modding</title>
    <link>https://jstolarek.github.io/posts/2023-06-05-more-gameboy-modding.html</link>
    <description><![CDATA[<article>
    <section class="header">
        Posted on 05/06/2023
    </section>
    <section>
        <h1 id="more-gameboy-modding">More GameBoy modding</h1>
<p>Since my <a href="2023-01-23-gameboy-color-nes-themed-modkit-from-funnyplaying.html">previous post about modding a GameBoy
Color</a>, back
in January, I have modded three more GameBoys: a GameBoy Pocket, an original
GameBoy DMG, and a GameBoy Advance. I want to talk about the first two today,
leaving the third one for later.</p>
<h2 id="gameboy-pocket">GameBoy Pocket</h2>
<p>I already have one modded GameBoy Pocket, but I wanted to make another one for
my wife. I got a donor GBP with a damaged screen that had a wide black stripe
running from top to bottom of the screen.</p>
<div class="thumbnail">
<figure>
<a href="/images/posts/2023-06-05-more-gameboy-modding/gbp_donor.jpg"><img src="/images/posts/2023-06-05-more-gameboy-modding/gbp_donor_thumbnail.jpg" /></a>
<figcaption>
Donor GameBoy Pocket next to a new shell.
</figcaption>
</figure>
</div>
<p>Modding GBP is very similar to GBC, so it went pretty smooth. Similarly to GBC,
I trimmed the cartridge slot pins and secured them with Kapton tape.</p>
<div class="thumbnail">
<figure>
<a href="/images/posts/2023-06-05-more-gameboy-modding/gbp_trimmed_pins.jpg"><img src="/images/posts/2023-06-05-more-gameboy-modding/gbp_trimmed_pins_thumbnail.jpg" /></a>
<figcaption>
Cartridge slot pins trimmed and secured.
</figcaption>
</figure>
</div>
<p>When I was making the NES-themed GBC I reported how replacing the speaker with a
new one resulted in no sound. I don’t know why that was the case but back then
I just restored the old speaker. I decided to try using remaining replacement
speaker in this build and it worked without any problems. I have no clue what I
did wrong with the GBC.</p>
<div class="thumbnail">
<figure>
<a href="/images/posts/2023-06-05-more-gameboy-modding/gbp_new_speaker.jpg"><img src="/images/posts/2023-06-05-more-gameboy-modding/gbp_new_speaker_thumbnail.jpg" /></a>
<figcaption>
New speaker installed.
</figcaption>
</figure>
</div>
<p>When installing the screen I always have a dilemma whether to use the provided
3M dust seal. A supposed advantage of using it is that it should provide
protection against dust getting between the screen and the lens<a href="#fn1" class="footnote-ref" id="fnref1" role="doc-noteref"><sup>1</sup></a>. A clear
disadvantage is that once the screen is glued to the seal it cannot be removed
without being destroyed. It also cannot be even adjusted in any way. After some
deliberation I decided to install the dust seal, which required cutting small
fragments on the side so that it fits in the shell.</p>
<div class="thumbnail">
<figure>
<a href="/images/posts/2023-06-05-more-gameboy-modding/gbp_dust_seal_1.jpg"><img src="/images/posts/2023-06-05-more-gameboy-modding/gbp_dust_seal_1_thumbnail.jpg" /></a>
<figcaption>
Dust seal required some cutting to fit the shell.
</figcaption>
</figure>
</div>
<div class="thumbnail">
<figure>
<a href="/images/posts/2023-06-05-more-gameboy-modding/gbp_dust_seal_2.jpg"><img src="/images/posts/2023-06-05-more-gameboy-modding/gbp_dust_seal_2_thumbnail.jpg" /></a>
<figcaption>
Dust seal in place.
</figcaption>
</figure>
</div>
<p>And here’s the lens and the screen already installed:</p>
<div class="thumbnail">
<figure>
<a href="/images/posts/2023-06-05-more-gameboy-modding/gbp_screen_installed.jpg"><img src="/images/posts/2023-06-05-more-gameboy-modding/gbp_screen_installed_thumbnail.jpg" /></a>
</figure>
</div>
<div class="thumbnail">
<figure>
<a href="/images/posts/2023-06-05-more-gameboy-modding/gbp_lens_installed.jpg"><img src="/images/posts/2023-06-05-more-gameboy-modding/gbp_lens_installed_thumbnail.jpg" /></a>
</figure>
</div>
<p>Finally, there’s some more soldering required. One contact on the ribbon cable
must be soldered to the power switch in order to provide enough power for the
screen, while another is used to solder a touch sensor. With these finished I
was ready to assemble the console. Here are a couple of photos of the finished
build.</p>
<div class="thumbnail">
<figure>
<a href="/images/posts/2023-06-05-more-gameboy-modding/gbp_front.jpg"><img src="/images/posts/2023-06-05-more-gameboy-modding/gbp_front_thumbnail.jpg" /></a>
<a href="/images/posts/2023-06-05-more-gameboy-modding/gbp_back.jpg"><img src="/images/posts/2023-06-05-more-gameboy-modding/gbp_back_thumbnail.jpg" /></a>
<figcaption>
Front and back
</figcaption>
</figure>
</div>
<div class="thumbnail">
<figure>
<a href="/images/posts/2023-06-05-more-gameboy-modding/gbp_colour_1.jpg"><img src="/images/posts/2023-06-05-more-gameboy-modding/gbp_colour_1_thumbnail.jpg" /></a>
<a href="/images/posts/2023-06-05-more-gameboy-modding/gbp_colour_2.jpg"><img src="/images/posts/2023-06-05-more-gameboy-modding/gbp_colour_2_thumbnail.jpg" /></a>
<figcaption>
IPS panel offers multiple colour schemes.
</figcaption>
</figure>
</div>
<p>One thing that didn’t go quite right is the centring of the screen. The photos
don’t show this well, but the screen is slightly shifted to the left so that the
left edge of the displayed image is covered. And since the screen is now glued
to the dust seal it’s not possible to adjust it. I might decide to fix this one
day at the expense of sacrificing a screen, which are not that expensive.</p>
<h2 id="gameboy-dmg">GameBoy DMG</h2>
<p>I also have one modded GameBoy DMG in my collection. Shortly before returning
from the UK to Poland I bought it from eBay with all mods already installed. I
knew GameBoys will be harder to find in Poland - well, not really harder to
find, just more expensive - so I decided to get one that’s already modded since
I didn’t have the time to mod it myself. However, I wasn’t entirely happy with
how that GameBoy looks. I could have just replaced the shell with a new one,
but I figured it would be more fun to get a new GameBoy DMG and mod it myself.
As expected, GameBoys in Poland are expensive so I got one from Sweden since it
was cheaper (sic!). The unit was sold as faulty/not working, but I don’t really
believe in such a thing as a broken GameBoy. There is a GameBoy that literally
<a href="https://www.reddit.com/r/mildlyinteresting/comments/8ifqbp/gameboy_at_nintendo_nyc_store_damaged_in_bombing/">survived a bombing during the Gulf War and it still
works</a>.
I assume there is simply no way that a DMG can’t be fixed.</p>
<p>When the unit arrived it had a missing lens, damage on the screen, and signs of
spilled acid in the battery compartment.</p>
<div class="thumbnail">
<figure>
<a href="/images/posts/2023-06-05-more-gameboy-modding/dmg_before.jpg"><img src="/images/posts/2023-06-05-more-gameboy-modding/dmg_before_thumbnail.jpg" /></a>
<figcaption>
Looks like this DMG went through a lot.
</figcaption>
</figure>
</div>
<p>I put in the batteries and - surprise, surprise - it didn’t power on. Well, the
seller wasn’t lying. I thought this must have something to do either with
corrosion from spilled batteries or the power switch. My first debugging step
was to check continuity between the battery contacts.</p>
<div class="thumbnail">
<figure>
<a href="/images/posts/2023-06-05-more-gameboy-modding/dmg_multimeter.jpg"><img src="/images/posts/2023-06-05-more-gameboy-modding/dmg_multimeter_thumbnail.jpg" /></a>
<figcaption>
Testing battery contacts with a multimeter.
</figcaption>
</figure>
</div>
<p>In the photo above my multimeter shows no continuity between the spring and a
metal plate that spring is attached to. Looks like the acid must have gotten
between the plate and the spring causing corrosion. The easiest way to test
whether this is indeed the problem was transferring the main board to a new
shell.</p>
<div class="thumbnail">
<figure>
<a href="/images/posts/2023-06-05-more-gameboy-modding/dmg_testing_main_board.jpg"><img src="/images/posts/2023-06-05-more-gameboy-modding/dmg_testing_main_board_thumbnail.jpg" /></a>
<figcaption>
Main board placed in a new shell.
</figcaption>
</figure>
</div>
<p>I inserted the batteries, turned the console on, and it Just Worked. So the
problem was with the damaged contacts from spilled batteries. I was glad this
went so easily. If the problem was with the power switch this repair would have
gotten much more difficult.</p>
<p>The DMG actually consists of two boards. One is the main board with a CPU -
that’s the one in photo above - while the other connects to the screen and also
contains button contacts. Installing a new IPS panel requires replacing the
other board with a new one. It also requires soldering a speaker and this is
the only soldering required by this mod.</p>
<div class="thumbnail">
<figure>
<a href="/images/posts/2023-06-05-more-gameboy-modding/dmg_speaker.jpg"><img src="/images/posts/2023-06-05-more-gameboy-modding/dmg_speaker_thumbnail.jpg" /></a>
<figcaption>
Preparing to solder the speaker.
</figcaption>
</figure>
</div>
<p>With the speaker in place I tested everything to make sure that both the speaker
and the screen work as expected.</p>
<div class="thumbnail">
<figure>
<a href="/images/posts/2023-06-05-more-gameboy-modding/dmg_testing.jpg"><img src="/images/posts/2023-06-05-more-gameboy-modding/dmg_testing_thumbnail.jpg" /></a>
<figcaption>
Testing screen and speaker before assembly.
</figcaption>
</figure>
</div>
<p>I was now ready to install the screen and the lens, and assemble everything
together. This kit comes with a very nice mounting bracket for the screen. It
fits very tightly, ensuring that the screen is correctly centred. It also
covers components on the ribbon cable so there is no need to secure them with
Kapton tape as I did in my other GameBoys.</p>
<div class="thumbnail">
<figure>
<a href="/images/posts/2023-06-05-more-gameboy-modding/dmg_parts.jpg"><img src="/images/posts/2023-06-05-more-gameboy-modding/dmg_parts_thumbnail.jpg" /></a>
<figcaption>
Preparing to install the screen.
</figcaption>
</figure>
</div>
<div class="thumbnail">
<figure>
<a href="/images/posts/2023-06-05-more-gameboy-modding/dmg_dust_seal.jpg"><img src="/images/posts/2023-06-05-more-gameboy-modding/dmg_dust_seal_thumbnail.jpg" /></a>
<figcaption>
Dust seal in place.
</figcaption>
</figure>
</div>
<div class="thumbnail">
<figure>
<a href="/images/posts/2023-06-05-more-gameboy-modding/dmg_mounting_bracket.jpg"><img src="/images/posts/2023-06-05-more-gameboy-modding/dmg_mounting_bracket_thumbnail.jpg" /></a>
<figcaption>
Mounting bracket in place.
</figcaption>
</figure>
</div>
<div class="thumbnail">
<figure>
<a href="/images/posts/2023-06-05-more-gameboy-modding/dmg_boards_connected.jpg"><img src="/images/posts/2023-06-05-more-gameboy-modding/dmg_boards_connected_thumbnail.jpg" /></a>
<figcaption>
Main board and screen board connected with a ribbon cable.
</figcaption>
</figure>
</div>
<p>One minor issue that appeared during the final assembly was insufficient number
of screws to attach the screen and button board to the shell. Eight are
required but the kit came with only six. My solution was to use the screws
from original GameBoy, though these turned out to be slightly too long.</p>
<p>This build was surprisingly quick, taking me less than two hours. I am very
happy with the end result, though as usual top and bottom of the IPS panel stand
out from under the lens and this is clearly visible in a transparent shell. One
other complain I could possibly have with the shell is that it doesn’t have any
Nintendo or GameBoy branding.</p>
<div class="thumbnail">
<figure>
<a href="/images/posts/2023-06-05-more-gameboy-modding/dmg_after.jpg"><img src="/images/posts/2023-06-05-more-gameboy-modding/dmg_after_thumbnail.jpg" /></a>
<figcaption>
My new smoke-black DMG next to already owned white one.
</figcaption>
</figure>
</div>
<p>While doing the final tests I discovered one small issue. With this kit the
contrast wheel is repurposed to adjust screen settings: brightness, colour, and
retro pixel mode. I realized that the wheel doesn’t have enough clearance and
is being pressed against the shell and gets stuck in one position.</p>
<div class="thumbnail">
<figure>
<a href="/images/posts/2023-06-05-more-gameboy-modding/dmg_contrast_wheel.jpg"><img src="/images/posts/2023-06-05-more-gameboy-modding/dmg_contrast_wheel_thumbnail.jpg" /></a>
<figcaption>
Contrast wheel did not have enough clearance and was getting stuck.
</figcaption>
</figure>
</div>
<p>My conjecture is that the problem is caused by the two missing screws mentioned
above. I used the six screws provided with the kit around the button contacts.
From my experience getting the board to fight tightly around the contacts is
crucial for the buttons to work correctly. Two missing screws that I replaced
using ones from the original unit were placed below the screen. As already
mentioned, these screws were a bit too long and didn’t hold the board as tightly
as screws provided with the kit. My guess is that if the board had a tighter
fight there it wouldn’t press the contrast wheel against the shell and all would
work as expected. My ad-hoc solution was to slightly loosen two of the screws
that hold the shell together. Now the contrast wheel can move freely, while the
shell still remains nicely fitted.</p>
<h2 id="whats-next">What’s next?</h2>
<p>As mentioned at the beginning of this post, I have also modded a GameBoy Advance
using a TFT panel that I have not used before. I want to spend more time
testing it before writing a post about it. I also have a GameBoy Advance SP
waiting to be modded, but for now I can’t find a shell that I would be happy
with, and I can’t decide what kind of screen to use - a TFT panel mentioned
above or a regular IPS panel? Once I do more testing with the TFT panel I
should be able to decide what components I want to use with the SP. Last but
not least, I have a NeoGeo Pocket Color. Recently I managed to buy a flashcart
for it and now the only thing it needs to be really usable is a new screen.
However, modding GBA SP and NGPC might have to wait for a few months due to
financial reasons.</p>
<section id="footnotes" class="footnotes footnotes-end-of-document" role="doc-endnotes">
<hr />
<ol>
<li id="fn1"><p>My primary GameBoy Advance does not have a dust seal and it is yet to get
any dust under the lens.<a href="#fnref1" class="footnote-back" role="doc-backlink">↩︎</a></p></li>
</ol>
</section>

        <p><a href="../blog.html">Back</a></p>
    </section>
</article>
]]></description>
    <pubDate>Mon, 05 Jun 2023 00:00:00 UT</pubDate>
    <guid>https://jstolarek.github.io/posts/2023-06-05-more-gameboy-modding.html</guid>
    <dc:creator>Jan Stolarek</dc:creator>
</item>
<item>
    <title>Firmament</title>
    <link>https://jstolarek.github.io/posts/2023-06-03-firmament.html</link>
    <description><![CDATA[<article>
    <section class="header">
        Posted on 03/06/2023
    </section>
    <section>
        <h1 id="firmament">Firmament</h1>
<p>I have quite a lengthy wishlist of computer games I am awaiting to be released.
And when one of these games is finally published what typically happens is that
I don’t have the time to play it because, well, adult life. But not this time.
Firmament, a new game by Cyan, was released two weeks ago and I jumped right
into it. Cyan is a studio that’s been around since the late 80s, and when you
think of it this in itself is a remarkable achievement<a href="#fn1" class="footnote-ref" id="fnref1" role="doc-noteref"><sup>1</sup></a>. They are most
famously known for the Myst series, which I am ashamed to admit I have not
played (yet?). But I did play their previous game, Obduction, and it was
remarkable. I was impatiently awaiting Firmament in hope of getting more of the
same. I finished Firmament today and sadly didn’t exactly get what I was hoping
for, but it definitely wasn’t a bad experience either.</p>
<p>Just like all games made by Cyan, Firmament is a game where you explore
stunningly beautiful worlds, discover their story, and solve environmental
puzzles. In Firmament there are three main Realms. Firstly, mountainous and
icy Curievale:</p>
<div class="thumbnail">
<figure>
<a href="/images/posts/2023-06-03-firmament/curievale_1.jpg"><img src="/images/posts/2023-06-03-firmament/curievale_1_thumbnail.jpg" /></a>
</figure>
</div>
<div class="thumbnail">
<figure>
<a href="/images/posts/2023-06-03-firmament/curievale_2.jpg"><img src="/images/posts/2023-06-03-firmament/curievale_2_thumbnail.jpg" /></a>
</figure>
</div>
<div class="thumbnail">
<figure>
<a href="/images/posts/2023-06-03-firmament/curievale_3.jpg"><img src="/images/posts/2023-06-03-firmament/curievale_3_thumbnail.jpg" /></a>
</figure>
</div>
<p>Then there’s lush St. Andrews with its conservatory:</p>
<div class="thumbnail">
<figure>
<a href="/images/posts/2023-06-03-firmament/st_andrews_1.jpg"><img src="/images/posts/2023-06-03-firmament/st_andrews_1_thumbnail.jpg" /></a>
</figure>
</div>
<div class="thumbnail">
<figure>
<a href="/images/posts/2023-06-03-firmament/st_andrews_2.jpg"><img src="/images/posts/2023-06-03-firmament/st_andrews_2_thumbnail.jpg" /></a>
</figure>
</div>
<div class="thumbnail">
<figure>
<a href="/images/posts/2023-06-03-firmament/st_andrews_3.jpg"><img src="/images/posts/2023-06-03-firmament/st_andrews_3_thumbnail.jpg" /></a>
</figure>
</div>
<p>And rocky Juleston where you’ll find an array of electrical batteries and a
sulphur processing facility:</p>
<div class="thumbnail">
<figure>
<a href="/images/posts/2023-06-03-firmament/juleston_1.jpg"><img src="/images/posts/2023-06-03-firmament/juleston_1_thumbnail.jpg" /></a>
</figure>
</div>
<div class="thumbnail">
<figure>
<a href="/images/posts/2023-06-03-firmament/juleston_2.jpg"><img src="/images/posts/2023-06-03-firmament/juleston_2_thumbnail.jpg" /></a>
</figure>
</div>
<p>Finally there’s The Swan, a tiny hub world that allows you to travel between the
Realms:</p>
<div class="thumbnail">
<figure>
<a href="/images/posts/2023-06-03-firmament/the_swan.jpg"><img src="/images/posts/2023-06-03-firmament/the_swan_thumbnail.jpg" /></a>
</figure>
</div>
<p>Each world also contains an Arch, a sky-reaching metallic construction, as well
as a tower. You play the role of a Keeper and your task will be to raise these
towers from beneath the surface and get to their tops. You do this using a tool
called the Adjunct that allows you to manipulate surrounding environment by
connecting to sockets located on doors, lifts, and other mechanical devices.</p>
<p>Firmament has three core elements that make up the experience. Firstly, there
are the visuals, which wowed me from the first minutes of the game. In case the
screenshots above weren’t enough here are a few more:</p>
<div class="thumbnail">
<figure>
<a href="/images/posts/2023-06-03-firmament/arch_1.jpg"><img src="/images/posts/2023-06-03-firmament/arch_1_thumbnail.jpg" /></a>
</figure>
</div>
<div class="thumbnail">
<figure>
<a href="/images/posts/2023-06-03-firmament/interior_1.jpg"><img src="/images/posts/2023-06-03-firmament/interior_1_thumbnail.jpg" /></a>
</figure>
</div>
<div class="thumbnail">
<figure>
<a href="/images/posts/2023-06-03-firmament/interior_2.jpg"><img src="/images/posts/2023-06-03-firmament/interior_2_thumbnail.jpg" /></a>
</figure>
</div>
<div class="thumbnail">
<figure>
<a href="/images/posts/2023-06-03-firmament/underwater.jpg"><img src="/images/posts/2023-06-03-firmament/underwater_thumbnail.jpg" /></a>
</figure>
</div>
<div class="thumbnail">
<figure>
<a href="/images/posts/2023-06-03-firmament/juleston_tower.jpg"><img src="/images/posts/2023-06-03-firmament/juleston_tower_thumbnail.jpg" /></a>
</figure>
</div>
<p>One of Cyan’s trademarks is their design of steampunk machines and environments,
and Firmament delivers on that front. However, while all the Realms are
beautiful, they are also quite similar to each other in that they are all worlds
filled with nature and similarly looking devices. This is a huge step back
compared to Obduction, where all the worlds were truly distinct from one
another.</p>
<p>The second element of the experience are puzzles. They form core part of the
gameplay. Unfortunately this is where Firmament should have been a lot better.
There were few puzzles that I really liked: ones where the rules of the puzzle
and its goal are easy to understand, but the solution itself requires thinking.
Unfortunately, most of the puzzles don’t fall into that category, having all
sorts of design problems. Some puzzles were tedious: I knew the solution but
was forced to walk back and forth to implement it. Others were totally obscure
and I solved them with trial and error. One of the reviews I saw online
compared the puzzles to towers of Hanoi, and that’s an accurate comparison.
Even if I knew what needed to be done, actually doing it often required lots
back and forth attempts. Again, Obduction had much better puzzles, especially
those that required combining elements between various worlds.</p>
<p>The last part of the experience is the plot, and this is what Firmament does
very poorly. In Obduction there was lots of environmental storytelling and many
bits and pieces to put together, allowing to recreate what has actually
happened. Granted, Obduction’s storytelling wasn’t perfect - <a href="https://steamcommunity.com/sharedfiles/filedetails/?id=1186090336">a kind soul went
through the effort of explaining everything for those who got
lost</a> - but
it was much better than what Firmament has to offer. In Firmament the player is
accompanied by Mentor, an avatar who acts as a narrator and tells successive
parts of the story as player progresses through the game. And that’s it.
There’s nothing to be figured out from the environment, nothing for the player
to piece together.</p>
<p>I also have to mention technical problems of Firmament. After the release many
people complained about getting softlocked due to puzzle bugs, or narrator voice
completely disappearing after certain point in the game. I was spared these
issues, but my playthrough was plagued by repeated crashes to desktop:</p>
<div class="thumbnail">
<figure>
<a href="/images/posts/2023-06-03-firmament/crash.jpg"><img src="/images/posts/2023-06-03-firmament/crash_thumbnail.jpg" /></a>
<figcaption>
A sadly common sight.
</figcaption>
</figure>
</div>
<p>If I was lucky crash to desktop would happen once an hour. If I was less lucky
I would experience seven crashes in 30 minutes. I reported these bugs to Cyan
support, but to this day these crashes have not been fixed. They are the
primary reason why it took me 2 weeks to finish a game that ultimately takes
less than 8 hours to play. I also have to mention the menus. While the game
visuals are stunning, the menus look like prototypes that made it into
production:</p>
<div class="thumbnail">
<figure>
<a href="/images/posts/2023-06-03-firmament/menu_1.jpg"><img src="/images/posts/2023-06-03-firmament/menu_1_thumbnail.jpg" /></a>
</figure>
</div>
<div class="thumbnail">
<figure>
<a href="/images/posts/2023-06-03-firmament/menu_2.jpg"><img src="/images/posts/2023-06-03-firmament/menu_2_thumbnail.jpg" /></a>
</figure>
</div>
<p>Menu’s are not the most important thing, but they certainly make for a bad first
impression of the game.</p>
<p>My overall impressions of Firmament are good, but aside from the visuals it
certainly is a step back compared to Obduction. If you haven’t played any game
from Cyan and would like to give it a try, Obduction would definitely be my
recommendation, not Firmament. And if you want to give Firmament a try I
recommend waiting for more bugfixes and a sale.</p>
<section id="footnotes" class="footnotes footnotes-end-of-document" role="doc-endnotes">
<hr />
<ol>
<li id="fn1"><p>I just finished reading Jason Schreier’s book <em>“Press Reset: Ruin and
Recovery in the Video Game Industry”</em> which is exactly on the topic of
game studios getting closed all the time and often for no good reason.
Great book, highly recommended.<a href="#fnref1" class="footnote-back" role="doc-backlink">↩︎</a></p></li>
</ol>
</section>

        <p><a href="../blog.html">Back</a></p>
    </section>
</article>
]]></description>
    <pubDate>Sat, 03 Jun 2023 00:00:00 UT</pubDate>
    <guid>https://jstolarek.github.io/posts/2023-06-03-firmament.html</guid>
    <dc:creator>Jan Stolarek</dc:creator>
</item>
<item>
    <title>How my new wireless headphones caused me eye problems</title>
    <link>https://jstolarek.github.io/posts/2023-06-02-how-my-new-wireless-headphones-caused-me-eye-problems.html</link>
    <description><![CDATA[<article>
    <section class="header">
        Posted on 02/06/2023
    </section>
    <section>
        <h1 id="how-my-new-wireless-headphones-caused-me-eye-problems">How my new wireless headphones caused me eye problems</h1>
<p>(I know the title of this post looks like a total click-bait, but please bear
with me.)</p>
<p>In early September I began experiencing eye problems. My eyes would become
bloodshot, dry, and start itching, sometimes with sharp pain behind the eyeballs.
<a href="/images/posts/2023-06-02-how-my-new-wireless-headphones-caused-me-eye-problems/right_eye.jpg">Here</a>
is just one photo showing the symptoms.</p>
<p>I work as a programmer, spending at least 8 hours a day in front of a monitor,
so obviously I put a lot of strain on my eyes. But such rapid development of
symptoms was very surprising. Interestingly, there seemed to be no general rule
as to when this would happen. Sometimes I would go to bed without any problems
and wake up in the morning with my eyes hurting. Or I would experience the most
severe symptoms during the weekend when I didn’t spend any time in front of the
screen. Sometimes only one eye would be affected, while the other was fine.
All of this was worrying.</p>
<p>My first attempt at dealing with the problem was using over-the-counter eye
drops available at the pharmacy. I tried these for about 4-5 weeks but when
things did not improve I went to the optometrist. Examination showed no clear
cause of problems and I was prescribed steroid eye drops. These somewhat
alleviated the symptoms, but the problems persisted. I went to another
optometrist to get a second opinion but again everything seemed fine wit my eyes
and there was no obvious cause for the problems I was experiencing. I got some
other medicine, including gel with vitamin A, but these at best temporarily
helped with the symptoms.</p>
<p>My problems started in September. It was January already and the whole thing
was significantly affecting my daily life and general well-being. As an act of
desperation I told everything to my physio. She’s a real genius and in the past
helped me with problems I would never think are musculoskeletal. She began
asking me about any possible changes in my desktop setup: “Have you changed font
size?”, “Is your screen closer or farther than it was?”, “Have you changed your
chair?”, etc. I answered all these questions with “no”. My setup remains
unchanged for the past several years: same chair, same table, same monitor, same
UI settings. Nothing has changed.</p>
<p>Or has it? Two days after talking to her it dawned on me: I have new wireless
headphones. I bought them online so it was easy to check the purchase date:
26th of August. Just a few days before my problems began. Could this be the
problem? I remember first using the headphones they were a bit too tight,
causing my jaw muscle to hurt during the first couple of days. But then the jaw
pain went away and things seemed fine, except I didn’t thought eye problems
could be the caused by headphones. I had to test this hypothesis and, with a
lot of regret, put the headphones away and went back to my old wired earbuds.
From that moment things gradually began to improve. Recovery process wasn’t
immediate. It took several weeks before I could declare my eye problems to be
practically gone.</p>
<p>It seems that my eyes were hurting due to eye muscles being strained, though I
still don’t know what was directly causing this strain. Was it the pressure
from headphones on the jaw muscles or the extra weight placed on my head
straining neck muscles? Either way it looks like I can’t go back to my wireless
headphones. Once the symptoms disappeared I thought I’ll try using my new
headphones again and this time it only took 15 minutes before the characteristic
sharp pain behind my eye reappeared.</p>
<p>I’m sharing this in hope it helps someone who might be struggling with a similar
problem and can’t find the cause. I’m specifically not saying which exact
headphones I got since I think that is completely irrelevant here.</p>

        <p><a href="../blog.html">Back</a></p>
    </section>
</article>
]]></description>
    <pubDate>Fri, 02 Jun 2023 00:00:00 UT</pubDate>
    <guid>https://jstolarek.github.io/posts/2023-06-02-how-my-new-wireless-headphones-caused-me-eye-problems.html</guid>
    <dc:creator>Jan Stolarek</dc:creator>
</item>
<item>
    <title>Installing xStation</title>
    <link>https://jstolarek.github.io/posts/2023-03-35-installing-xstation.html</link>
    <description><![CDATA[<article>
    <section class="header">
        Posted on 25/03/2023
    </section>
    <section>
        <h1 id="installing-xstation">Installing xStation</h1>
<center>
<strong>DISCLAIMER:</strong> This post is not intended to serve as installation tutorial.
</center>
<p>When <a href="2022-12-26-recalbox-rgb-dual-some-impressions-after-six-months-of-usage.html">reviewing RGB
Dual</a>
I mentioned how Recalbox struggled with emulating PlayStation (PSX) games.
Although Raspberry Pi should have enough computing power to run PSX games at
full speed, emulator used by Recalbox (SwanStation), is not up to the task.
This was a big disappointment since my primary goal when getting RGB Dual was
being able to run PSX games. This left me with only one choice: buy the
original PlayStation. Luckily, PSX was a popular console so finding one wasn’t
much of a problem. Just like with other retro consoles problems start once you
actually get the hardware since it requires modifications or extra accessories.
Luckily for me I already have an RGB cable and a BlueRetro receiver for PS2, and
these are compatible with PSX allowing me to connect the console to my PVM and
use DualSense controller. I was left with two missing pieces. Firstly, the
memory card. I was lucky and managed to grab MemCard Pro from 8BitmMods<a href="#fn1" class="footnote-ref" id="fnref1" role="doc-noteref"><sup>1</sup></a>.
This modern memory card replacement allows to store memory card images on an SD
card allowing for easy backup and save transfer between real hardware and
emulators. The second missing piece was an optical drive emulator (ODE), since
running games from original CDs is not feasible these days.</p>
<p>When it comes to PlayStation ODEs there are following options:</p>
<ul>
<li><p><a href="https://ps-io.com/">PSIO</a>. Connects to expansion port at the back of
console. This is very non-invasive and easy to install, which is a big
plus. Unfortunately, PSIO has been out of stock for the past year if not
longer. Moreover, I’ve seen people complaining a lot about compatibility,
though according to official FAQ PSIO is compatible with 99.5% games. Last
but not least, <a href="https://ps-io.com/blocked-serials/">PSIO seems to be DRMed</a>
and needs to be registered with the manufacturer, which makes it a no-go for
me.</p></li>
<li><p><a href="https://github.com/x-station">xStation</a>. This ODE replaces the original CD
drive of the console. Installation is difficult as it requires precise
soldering. According to the internets xStation offers better compatibility
than PSIO.</p></li>
<li><p><a href="https://shop.terraonion.com/shop/system/playstation/view">TerraOnion MODE</a>.
MODE was originally developed for Saturn and Dreamcast but now it also works
with PSX. Unfortunately it’s out of stock and requires registration to
receive firmware updates. As a bonus, it’s also quite expensive and runs
games from a hard drive rather than a memory card.</p></li>
<li><p>Bonus: <a href="https://github.com/paulocode/picostation">PicoStation</a>. An open
source alternative to xStation that is based on Raspberry Pi Pico.
Unfortunately it’s still in development so not really an option at this
moment.</p></li>
</ul>
<p>I went with the xStation. As with lots of retro mods these days xStation was
out of stock but luckily the pre-orders were up. I ordered one unit and, after
some delays, finally received it in mid February.</p>
<div class="thumbnail">
<figure>
<a href="/images/posts/2023-03-35-installing-xstation/1_xstation_kit.jpg"><img src="/images/posts/2023-03-35-installing-xstation/1_xstation_kit_thumbnail.jpg" /></a>
<figcaption>
xStation kit comes in a nice box. QSB (Quick Solder Board) is included with the board.
</figcaption>
</figure>
</div>
<p>I already learned it’s a good idea to install console mods during the weekend.
Installation usually takes longer than expected and it was no different this
time. Installation of xStation requires two main steps:</p>
<ol type="1">
<li>Soldering a QSB (Quick Solder Board) to the motherboard of PlayStation.</li>
<li>Lifting pins on one of the integrated circuits, the IC701.</li>
</ol>
<p>I wasn’t too concerned about the soldering. Lifting pins was the scary part.
It’s something I haven’t done before and something, I imagine, that could easily
go wrong given how small the pins are. Here’s a photo with a coin that’s the
size of a penny coin:</p>
<div class="thumbnail">
<figure>
<a href="/images/posts/2023-03-35-installing-xstation/2_ic_size.jpg"><img src="/images/posts/2023-03-35-installing-xstation/2_ic_size_thumbnail.jpg" /></a>
<figcaption>
IC701. Several pins of this chip have to be lifted when installing xStation.
</figcaption>
</figure>
</div>
<p>Soldering seemingly went smooth. There are around 20 solder points, some of
them requiring uncovering the via pads with a sharp tool (Olfa knife comes in
handy). Having already some soldering experience from the previous mods this
wasn’t too difficult.</p>
<div class="thumbnail">
<figure>
<a href="/images/posts/2023-03-35-installing-xstation/3_qcb_preparation.jpg"><img src="/images/posts/2023-03-35-installing-xstation/3_qcb_preparation_thumbnail.jpg" /></a>
<figcaption>
QSB secured in place before soldering.
</figcaption>
</figure>
</div>
<div class="thumbnail">
<figure>
<a href="/images/posts/2023-03-35-installing-xstation/4_qcb_done.jpg"><img src="/images/posts/2023-03-35-installing-xstation/4_qcb_done_thumbnail.jpg" /></a>
<figcaption>
QSB soldered to PlayStation motherboard. I’m happy with how cleanly the cable turned out.
</figcaption>
</figure>
</div>
<p>Lifting pins also wasn’t as difficult as I imagined. I followed <a href="https://www.youtube.com/live/QC3SAGdNWB8?feature=share&amp;t=3627">Voultar’s
advice</a> and used
a dental pick. Again, things <em>seemingly</em> went smooth.</p>
<div class="thumbnail">
<figure>
<a href="/images/posts/2023-03-35-installing-xstation/5_pins_lifted.jpg"><img src="/images/posts/2023-03-35-installing-xstation/5_pins_lifted_thumbnail.jpg" /></a>
<figcaption>
Lifted pins on IC701.
</figcaption>
</figure>
</div>
<div class="thumbnail">
<figure>
<a href="/images/posts/2023-03-35-installing-xstation/6_lifted_pins_secured.jpg"><img src="/images/posts/2023-03-35-installing-xstation/6_lifted_pins_secured_thumbnail.jpg" /></a>
<figcaption>
I secured the pads with Kapton tape but ended up removing the tape later.
</figcaption>
</figure>
</div>
<div class="thumbnail">
<figure>
<a href="/images/posts/2023-03-35-installing-xstation/7_two_boards.jpg"><img src="/images/posts/2023-03-35-installing-xstation/7_two_boards_thumbnail.jpg" /></a>
<figcaption>
Modified motherboard on the left and a spare one on the right.
</figcaption>
</figure>
</div>
<p>As you can see in the last photo I have two PlayStation motherboards. Given
that this is a difficult mod I decided to get a spare one in advance. Luckily
it wasn’t necessary, although you will see things didn’t go smooth.</p>
<p>As the final step I installed the xStation board, connecting it with a ribbon
cable, and re-assembled the console:</p>
<div class="thumbnail">
<figure>
<a href="/images/posts/2023-03-35-installing-xstation/8_assembly.jpg"><img src="/images/posts/2023-03-35-installing-xstation/8_assembly_thumbnail.jpg" /></a>
<figcaption>
Putting everything back together.
</figcaption>
</figure>
</div>
<p>After assembling the PlayStation I connected it to the TV, turned it on,
and… got a black screen. Console seemed dead. It was time for hardware
debugging, which is something I don’t have a lot of experience with. Luckily,
<a href="https://github.com/x-station/xstation-issues#pu-18">there are detailed photos for the xStation showing test points on the
motherboard</a>. I took my
multimeter and began testing connectivity. Now, logic dictates that
connectivity should be a transitive property, meaning that if there is current
flow between points A and B, and there is current flow between points B and C
then there is current flow between points A and C. Surprisingly this didn’t
seem to be the case here. I first measured connectivity between all solder
blobs and their corresponding pins in the ribbon cable slot, and found no
problems. Then I measured connectivity between solder blobs and test points on
the motherboard. Again, no problems here. But then I began measuring
connectivity directly between the ribbon cable slot pins and test points on the
motherboard, and clearly in four cases there was no connectivity. This caused a
lot of head scratching on my side, but I finally figured it out. Apparently
some solder blobs didn’t make connection with their corresponding solder point
on the motherboard, but pushing the blob down with a probe during measurement
made them connect, resulting in connectivity being reported incorrectly. I
re-soldered those four points, measured everything again, and this time all pins
showed as being correctly connected. It was time to re-assemble the console and
test again. This time it did power on and boot into console BIOS.</p>
<p>This was progress, but it was still wrong, since the console should have booted
into xStation menu. Time for another debugging session. This time I went to
Discord and was lucky to be assisted by the creator of xStation. We went
through <em>lots</em> of test, including measuring resistance between points on
PlayStation motherboard and xStation SoC. The diagnosis was that, while
xStation seems to power on and work, data isn’t being transmitted between the SD
card and the console. At this point I’ve been working on xStation for 7 hours,
with most of time being spent on debugging. I was exhausted and ready to call
it a day, but decided to try one last thing. What concerned me from the
beginning was the pin lifting on the IC701. I feared that this is where I went
wrong by accidentally breaking a solder point between the motherboard and one of
the pins that should not have been lifted. This, luckily, has an easy fix. I
took my soldering iron with K tip (large tip resembling a chisel or a scalpel)
and reflowed the remaining pins on IC701. And this did the job! After yet
another re-assembly of the console xStation booted correctly:</p>
<div class="thumbnail">
<figure>
<a href="/images/posts/2023-03-35-installing-xstation/9_test.jpg"><img src="/images/posts/2023-03-35-installing-xstation/9_test_thumbnail.jpg" /></a>
<figcaption>
After nearly 8 hours of work xStation finally works.
</figcaption>
</figure>
</div>
<p>I copied a game image to an SD card, plugged it into xStation to make sure it
indeed works, and finally my work was done. I started at noon and finished
right before 8PM. This was way longer than expected. Note that the above
account is an abridged one. In fact, there was some trial and error when fixing
the solder points on the QSB and I ended up disassembling and reassembling the
console around 7 times or so. Lessons learned:</p>
<ol type="1">
<li>Practice soldering more.</li>
<li>When lifting pins reflow the remaining ones just in case.</li>
</ol>
<section id="footnotes" class="footnotes footnotes-end-of-document" role="doc-endnotes">
<hr />
<ol>
<li id="fn1"><p>The luck part is in that it was available. In the past 2-3 years
overwhelming majority of mods is notoriously out of stock.<a href="#fnref1" class="footnote-back" role="doc-backlink">↩︎</a></p></li>
</ol>
</section>

        <p><a href="../blog.html">Back</a></p>
    </section>
</article>
]]></description>
    <pubDate>Sat, 25 Mar 2023 00:00:00 UT</pubDate>
    <guid>https://jstolarek.github.io/posts/2023-03-35-installing-xstation.html</guid>
    <dc:creator>Jan Stolarek</dc:creator>
</item>
<item>
    <title>Free IPS Patcher</title>
    <link>https://jstolarek.github.io/posts/2023-03-02-free-ips-patcher.html</link>
    <description><![CDATA[<article>
    <section class="header">
        Posted on 02/03/2023
    </section>
    <section>
        <h1 id="free-ips-patcher">Free IPS Patcher</h1>
<p>I recently started playing Final Fantasy IV on SNES. Before playing the game I
decided to patch the ROM with <a href="https://www.romhacking.net/hacks/2337/">Namingway Edition
patch</a> and once again found myself
without a tool for applying IPS patches. Sure, there are <a href="https://bbbradsmith.github.io/ipstool/">online
patchers</a> but I hate resorting to online
services for doing such simple tasks. Luckily <a href="https://zerosoft.zophar.net/ips.php">IPS file format is actually very
simple</a> so I decided to write a patching
tool. Behold <a href="https://bitbucket.org/jstolarek/free-ips-patcher">Free IPS
Patcher</a>. Use it from the
command line like so:</p>
<pre><code>ips ROM_FILE PATCH_FILE OUTPUT_FILE</code></pre>
<p>It’s all coded in less than 200 lines of C, with majority of the code being
error handling. I was tempted to write the program in Haskell but I wanted it
to be easily accessible and lets face it, most people don’t have Haskell
toolchain on their machines.</p>

        <p><a href="../blog.html">Back</a></p>
    </section>
</article>
]]></description>
    <pubDate>Thu, 02 Mar 2023 00:00:00 UT</pubDate>
    <guid>https://jstolarek.github.io/posts/2023-03-02-free-ips-patcher.html</guid>
    <dc:creator>Jan Stolarek</dc:creator>
</item>
<item>
    <title>Getting a Sony PVM</title>
    <link>https://jstolarek.github.io/posts/2023-02-20-getting-a-sony-pvm.html</link>
    <description><![CDATA[<article>
    <section class="header">
        Posted on 20/02/2023
    </section>
    <section>
        <h1 id="getting-a-sony-pvm">Getting a Sony PVM</h1>
<p>PVM, standing for “Professional Video Monitor”, is a series of CRT monitors that
were produced by Sony for professional applications, primarily for use in
hospitals and TV studios. PVM production ended in the noughties and they have
since been replaced by LCD monitors, PVMs being then treated as junk and often
scrapped. But in recent years PVMs have been re-discovered by retro enthusiasts
as great monitors for use with consoles that output analogue RGB video signal
(roughly fourth to sixth generation of consoles). This is due to superb image
quality offered by PVMs. After all these were professional monitors equipped
with electronics whose quality was way above consumer grade TV sets.</p>
<p>In early 2023 I finally managed get a Sony PVM, which has been my dream for the
past three years. There were three main obstacles to overcome in order to make
this happen. Firstly, finding a good quality PVM. These monitors are now
around two decades old and many units have developed faults such as burn-ins on
the screen, geometry faults, etc. Secondly, the supply is short and the demand
is high which means that prices have gotten quite high. Thirdly, and this will
be trivial, a 20″ PVM weights 30 kilograms and I don’t have a car, making
transport from another city a logistical nightmare. Luckily for me the stars
aligned in December 2022 and I found a PVM-20M2MDE that was in good condition,
at an acceptable price (still expensive, but it was a price I could afford), and
in a city where I could make a return trip directly by train in one day.
Transporting a 30kg CRT by train turned out to be quite an ordeal but it was
definitely worth it.</p>
<p>Here are some photos comparing Super Metroid on Panasonic TX-21S1TCP and
PVM-20M2MDE:</p>
<div class="thumbnail">
<figure>
<a href="/images/posts/2023-02-20-getting-a-sony-pvm/super_metroid.jpg"><img src="/images/posts/2023-02-20-getting-a-sony-pvm/super_metroid_thumbnail.jpg" /></a>
<figcaption>
Super Metroid on Panasonic TV (left) and PVM (right). Click to enlarge.
</figcaption>
</figure>
</div>
<p>The difference in image quality is noticeable immediately, especially when you
look at background details, though admittedly colours on the PVM are not as
lively. Here are some closeups:</p>
<div class="thumbnail">
<figure>
<a href="/images/posts/2023-02-20-getting-a-sony-pvm/samus.jpg"><img src="/images/posts/2023-02-20-getting-a-sony-pvm/samus_thumbnail.jpg" /></a>
<figcaption>
Samus closeup. Panasonic TV (left) and PVM (right). Click to enlarge.
</figcaption>
</figure>
</div>
<div class="thumbnail">
<figure>
<a href="/images/posts/2023-02-20-getting-a-sony-pvm/map.jpg"><img src="/images/posts/2023-02-20-getting-a-sony-pvm/map_thumbnail.jpg" /></a>
<figcaption>
Detail closeup. Panasonic TV (top) and PVM (bottom). Click to enlarge.
</figcaption>
</figure>
</div>
<div class="thumbnail">
<figure>
<a href="/images/posts/2023-02-20-getting-a-sony-pvm/energy.jpg"><img src="/images/posts/2023-02-20-getting-a-sony-pvm/energy_thumbnail.jpg" /></a>
<figcaption>
Detail closeup. Panasonic TV (top) and PVM (bottom). Click to enlarge.
</figcaption>
</figure>
</div>
<p>Unfortunately, PVM’s picture quality isn’t perfect due to convergence problems,
which manifest primarily at the edges of the screen. You can notice this by
looking at the “Energy” text on the photo above and observing how the white
letters actually bleed red colour. (They also bleed blue, but since there’s a
1-pixel blue outline around the font you won’t notice it.) This colour bleeding
can be fixed but requires disassembling the monitor and adjusting convergence
rings on the yoke while the monitor is turned on. Voltage inside a PVM (or any
other CRT) can go as high as several kilovolts, so this requires knowledge in
order to do it safely. Luckily, Steve from
<a href="https://www.youtube.com/@RetroTechUSA">RetroTech</a> has lots of good videos on
servicing PVMs and my plan is to go through them and do the convergence
adjustments once I feel confident I won’t hurt myself or screw up the monitor.</p>
<div class="thumbnail">
<figure>
<a href="/images/posts/2023-02-20-getting-a-sony-pvm/castlevania.gif"><img src="/images/posts/2023-02-20-getting-a-sony-pvm/castlevania.gif" /></a>
<figcaption>
Castlevania: Symphony of the Night on Sony PVM.
</figcaption>
</figure>
</div>
<p>P.S. Aside from gaming, I found the PVM to be great for watching old anime in
4:3 aspect ratio. At the moment I’m finishing 2nd season of Initial D.</p>

        <p><a href="../blog.html">Back</a></p>
    </section>
</article>
]]></description>
    <pubDate>Mon, 20 Feb 2023 00:00:00 UT</pubDate>
    <guid>https://jstolarek.github.io/posts/2023-02-20-getting-a-sony-pvm.html</guid>
    <dc:creator>Jan Stolarek</dc:creator>
</item>
<item>
    <title>Metroid II&#58; Return of Samus (and its remakes)</title>
    <link>https://jstolarek.github.io/posts/2023-02-14-metroid-ii-return-of-samus-and-its-remakes.html</link>
    <description><![CDATA[<article>
    <section class="header">
        Posted on 14/02/2023
    </section>
    <section>
        <h1 id="metroid-ii-return-of-samus-and-its-remakes">Metroid II: Return of Samus (and its remakes)</h1>
<p>Two weeks ago I finished playing Metroid II on GameBoy. I bought the original
cartridge for a bargain price in Cex sometime in mid 2021. I started playing
the game back then but gave up about 1,5 hour into the game, primarily due to
(perceived) high difficulty. <a href="2023-01-23-gameboy-color-nes-themed-modkit-from-funnyplaying.html">Having modded another GameBoy Color
recently</a> I
spontaneously picked up the cart and resumed playing, just to make sure that
everything works correctly. Before I knew it I was past the difficulty spike
and quickly progressing through the game, finishing it in under 6 hours of total
game time.</p>
<p>Metroid II is unlike other Metroid games. (Except for its remakes, but we’ll
get to that.) Other entries in the series require the player to explore a
single large map and do a lot of backtracking to revisit previously explored
areas. Metroid II is quite different. As usual the player begins by having
access to only a small part of the world map. But this time access to further
areas of the planet opens automatically when player kills all metroids in the
currently explored area. It’s a rinse and repeat pattern: kill all metroids in
a given area, descend deeper into the caves of SR388 to a newly-open area, kill
all metroids there, and so on. As a result at any given time player is only
exploring a relatively small chunk of the map that acts as a self-contained
level. There is no reason to backtrack to previously explored areas, though
there is nothing stopping the player from doing so if they wish. Like I said,
this is different from other Metroid games, but note that when the game was
released in 1991 there was only one other Metroid game. The genre-defining
Super Metroid was only to come in 1994. Also, such a design made a lot of sense
given that: a) the game was designed for a handheld console with the intention
of being played in small chunks (and I can confirm you’re never farther than 2
minutes away from a save station); and b) the game didn’t have a built-in map
and so the world had to be designed in a way that’s possible to navigate without
a map.</p>
<h2 id="hardware-issues-with-my-nes-themed-gameboy-color">Hardware issues with my NES-themed GameBoy Color</h2>
<p>As mentioned, my newly-modded GameBoy Color with larger screen was my motivation
to resume playing. Unfortunately, I ran into hardware issues.</p>
<p>GameBoy Color runs on two AA batteries. At the moment there are no easy,
drop-in rechargeable battery mods so I just use rechargeable batteries. To my
surprise a pair of such batteries only gave me about 15-20 minutes of gameplay.
After that time the console began rebooting during play, sometimes going into a
loop of constant reboots. I was of course expecting a higher power draw due to
larger, backlit IPS panel, but such a short battery life was an unpleasant
surprise. I switched to using non-rechargeable Duracell batteries. These gave
me maybe 90 minutes of play time before same problem started occurring. That
was definitely unexpected. Soon after my GBC refused to turn on regardless of
batteries used.</p>
<p>This kind of problem is actually quite common in GameBoys and is caused by the
power switch. These tend get dirty and oxidize (read: rust) over time. The
solution is to disassemble the switch be removing the metal covering it and then
clean the inside with IPA. I already did that in the past with one of my
GameBoy Advances. While this all sounds quite simple, desoldering the power
switch cover is actually quite difficult, and unfortunately I messed up.
During desoldering the bottom plastic part of the switch broke in half, with one
half coming off the PCB. I have some replacement power switches for the
GameBoy so I thought at this point I might as well replace the (now literally)
broken power switch with a new one. This required desoldering the remaining
half of the switch, which I also messed up by lifting one of the pads from the
PCB. I managed to salvage this and solder the new switch in such a way that it
works, which I consider to be a small miracle.</p>
<p>But doing all these fixes required a free afternoon and I just wanted to
continue with the game! It was a good reason to grab my GameBoy pocket:</p>
<div class="thumbnail">
<figure>
<a href="/images/posts/2023-02-14-metroid-ii-return-of-samus-and-its-remakes/gbp_gameplay.jpg"><img src="/images/posts/2023-02-14-metroid-ii-return-of-samus-and-its-remakes/gbp_gameplay_thumbnail.jpg" /></a>
<figcaption>
Preparing to fight Metroid Queen on GameBoy Pocket.
</figcaption>
</figure>
</div>
<h2 id="am2r">AM2R</h2>
<p>In 2016 Metroid II received an unofficial, fan-made remake titled AM2R, which
stands for Another Metroid 2 Remake<a href="#fn1" class="footnote-ref" id="fnref1" role="doc-noteref"><sup>1</sup></a>. It was made by a single person, Milton
Guasti, using GameMaker and re-using assets from Super Metroid and Metroid: Zero
Mission. AM2R’s re-envisioning of Metroid II is spot on, resulting in one of
the best Metroid games ever. Unfortunately, Nintendo didn’t like this and as
soon as they caught wind of AM2R they sent DMCA takedowns to sites hosting the
game. Luckily, the story doesn’t end here. Things don’t disappear on the
Internet that easily and the game still can be downloaded, e.g. from
archive.org. What’s more, <a href="https://gitlab.com/yellowafterlife/AM2Rrc">AM2R’s “executable” (GameMaker byte code) was
disassembled</a> and is being maintained
and developed by a <a href="https://github.com/AM2R-Community-Developers">community of
fans</a>.</p>
<h2 id="metroid-samus-returns">Metroid: Samus Returns</h2>
<p>In 2017 Nintendo released its official Metroid II remake for the Nintendo 3DS,
titled Metroid: Samus Returns. Development was handled by MercurySteam, a
Spanish developer, who also got to develop Castlevania games for PS3 and XBox
360. For me this game was literally a platform seller - it was the reason I
bought 3DS. Sadly, it was also a huge disappointment, mostly due to gameplay
changes that took the game into direction that’s completely different from other
entries in the series. Metroid was always a game about exploration, but
MercurySteam pushed Samus Returns towards a combat-focused game. They
introduced a new “melee counter” combat mechanic. Enemies will now charge at
Samus and the player is required to counter such attacks with a well-timed
counter that stuns the enemy, allowing to execute a follow-up counter-attack.
This is very difficult to pull off as the timings are very tight and I struggled
to pull them off even near the end of the game<a href="#fn2" class="footnote-ref" id="fnref2" role="doc-noteref"><sup>2</sup></a>. The result is that instead
of actively engaging enemies, you typically stand still to let enemies attack
hoping that you can pull off the melee counter correctly. To add insult to
injury, the game forces you to play with the analog stick. I hate it when
metroidvanias require playing on the analog stick (yes, I’m thinking about Ori),
but here it is particularly bad due to 3DS’ analog being a stick only by name.
The result is that you’re now required to aim very precisely with analog that’s
not up for the task. The end result is a Metroid game that’s hampered by its
combat mechanics, which was never an issue for any prior Metroid game.</p>
<p>I could spend a few more paragraphs bashing Samus Returns, but it actually has
one design aspect that needs praising: boss design. I really like how
MercurySteam designs bosses, both in Samus Returns and recent Metroid Dread.
Bosses in these two games clearly telegraph what attacks they are going to
execute 1-3 seconds before actually executing them yet they remain challenging,
often requiring several attempts to defeat. Mining Robot is definitely one of
the best bosses in the Metroid series.</p>
<h2 id="summary">Summary</h2>
<p>After getting over the initial difficulty spike, I really enjoyed Metroid II.
Also, plot-wise this is an important entry in the series, directly affecting
events in Metroid Fusion and Metroid Dread. That being said I would hesitate to
recommend Metroid II to anyone except for die-hard series’ fans. I do recommend
AM2R though. Despite being a fan-made project, and unlike Nintendo’s Samus
Returns, AM2R perfectly captures the spirit of Metroid II and offers great
gameplay.</p>
<p>Finally, I really recommend watching GMTK’s <a href="https://www.youtube.com/watch?v=8WkEoYvlUF0">How AM2R and Samus Returns remade
Metroid 2</a> video, which offers a
much deeper comparison of Metroid II, AM2R and Metroid: Samus Returns than the
one I have given above.</p>
<section id="footnotes" class="footnotes footnotes-end-of-document" role="doc-endnotes">
<hr />
<ol>
<li id="fn1"><p>That “Another” bit is just for kicks, I guess? There was no prior Metroid
II remake.<a href="#fnref1" class="footnote-back" role="doc-backlink">↩︎</a></p></li>
<li id="fn2"><p>Recent Metroid Dread, also from MercurySteam, somewhat fixes that mechanic
by adding more leniency to the counter timings.<a href="#fnref2" class="footnote-back" role="doc-backlink">↩︎</a></p></li>
</ol>
</section>

        <p><a href="../blog.html">Back</a></p>
    </section>
</article>
]]></description>
    <pubDate>Tue, 14 Feb 2023 00:00:00 UT</pubDate>
    <guid>https://jstolarek.github.io/posts/2023-02-14-metroid-ii-return-of-samus-and-its-remakes.html</guid>
    <dc:creator>Jan Stolarek</dc:creator>
</item>
<item>
    <title>GameBoy Color NES-themed modkit from FunnyPlaying</title>
    <link>https://jstolarek.github.io/posts/2023-01-23-gameboy-color-nes-themed-modkit-from-funnyplaying.html</link>
    <description><![CDATA[<article>
    <section class="header">
        Posted on 23/01/2023
    </section>
    <section>
        <h1 id="gameboy-color-nes-themed-modkit-from-funnyplaying">GameBoy Color NES-themed modkit from FunnyPlaying</h1>
<center>
<strong>DISCLAIMER:</strong> This post is not intended to serve as installation tutorial.
</center>
<div class="thumbnail">
<figure>
<a href="/images/posts/2023-01-23-gameboy_color_nes-themed_modkit_from_funnyplaying/owned_gameboys.jpg"><img src="/images/posts/2023-01-23-gameboy_color_nes-themed_modkit_from_funnyplaying/owned_gameboys_thumbnail.jpg" alt="owned_gb" /></a>
<figcaption>
GameBoys from my collection.
</figcaption>
</figure>
</div>
<p>Above photo has three GameBoys from my collection, left to right:</p>
<ol type="1">
<li><p>Unmodded GameBoy Color (GBC) in teal shell. It has original shell as well
as original screen. Note that the LCD screens back in the 90s and early
2000s didn’t have a backlight. This means that the only reasonable way of
playing is by having some light directed at the screen. Personally I found
playing outdoors on a sunny summer day to be the best experience.</p></li>
<li><p>Modded GameBoy Color in berry shell. This GameBoy had its screen replaced
with a modern, backlighted IPS panel. It also has a replaced power board
(more on the below) and the shell is also new.</p></li>
<li><p>Modded GameBoy Pocket (GBP) in clear shell. Again, original
black-and-white screen has been replaced with a backlighted IPS panel.
Shell and buttons are also new.</p></li>
</ol>
<p>Note the screen sizes. GBC, while offering colours, has a smaller screen area
compared to GBP and original DMG GameBoy. On the other hand, modern IPS screen
for GBP/DMG isn’t black-and-white - it just pretends to be one, since it only
receives monochromatic signal from the console. It was only a matter of time
before someone came up with the idea of putting the IPS screen designed for GBP
into GBC, thus giving us GameBoy Color with screen as large as in the GBP and
DMG models.</p>
<p>I didn’t have a GBC with larger screen in my collection yet, so I decided to
make one. After buying a new GBC to act as donor console I went to order a
screen. My go-to destination for GameBoy IPS panels is FunnyPlaying, a Chinese
company that over the years has shown commitment to making good products and
innovating their mods. Towards the end of last year they releases a <a href="https://funnyplaying.com/collections/product/products/gbc-nes-ves-retro-pixel-lcd-kit">NES-themed
GameBoy Color
modkit</a>
that not only contains an IPS panel but also comes with NES-themed shell and
all the other parts such as buttons and silicon pads. I searched for reviews
and opinions on this kit but couldn’t find any, since the kit was newly
released. I decided to give it a try and ordered it. While the package from
China arrived quickly, I took me quite a while to find the time to assemble it.
Without further ado, lets jump right in.</p>
<h2 id="kit-overview">Kit overview</h2>
<div class="thumbnail">
<figure>
<a href="/images/posts/2023-01-23-gameboy_color_nes-themed_modkit_from_funnyplaying/kit.jpg"><img src="/images/posts/2023-01-23-gameboy_color_nes-themed_modkit_from_funnyplaying/kit_thumbnail.jpg" alt="fp_kit" /></a>
<figcaption>
Kit parts.
</figcaption>
</figure>
</div>
<p>The kit contains:</p>
<ul>
<li>A NES-themed shell</li>
<li>Laminated screen with a ribbon cable and wires, all stored in a stylish
plastic case modelled on GB cartridge. Note that there are two versions of
the kit: with standard glass lens and with 2.5D lens, which is rounded at
the edges. My kit is the latter one.</li>
<li>Buttons and silicon pads</li>
<li>Screws</li>
<li>Back sticker. This sticker is very high quality. It’s not printed on paper
but on a thick and durable metal-like material.</li>
</ul>
<p>The photo also includes a replacement speaker, which I bought as an extra - it
is not part of the kit! Here’s one more photo of the kit with the donor GBC and
unpacked screen:</p>
<div class="thumbnail">
<figure>
<a href="/images/posts/2023-01-23-gameboy_color_nes-themed_modkit_from_funnyplaying/kit_2.jpg"><img src="/images/posts/2023-01-23-gameboy_color_nes-themed_modkit_from_funnyplaying/kit_2_thumbnail.jpg" alt="fp_kit" /></a>
<figcaption>
Unpacked kit parts and donor GBC.
</figcaption>
</figure>
</div>
<p>One thing I quickly noticed is that the front and back of the shell don’t seem
to fit together well:</p>
<div class="thumbnail">
<figure>
<a href="/images/posts/2023-01-23-gameboy_color_nes-themed_modkit_from_funnyplaying/shell_fit.jpg"><img src="/images/posts/2023-01-23-gameboy_color_nes-themed_modkit_from_funnyplaying/shell_fit_thumbnail.jpg" alt="shell_fit" /></a>
<figcaption>
Shell fit seemed poor at first glance.
</figcaption>
</figure>
</div>
<p>This was a big surprise since all FunnyPlaying shells I had before had very good
fit and didn’t cause any issues. I was seriously worried at this point but I
need to get ahead of myself and say that after assembling the kit everything
fits nicely and my initial concerns were unwarranted.</p>
<h2 id="putting-the-kit-together">Putting the kit together</h2>
<p>My plan when making this mod was to also replace the original power board<a href="#fn1" class="footnote-ref" id="fnref1" role="doc-noteref"><sup>1</sup></a>.
The problem with original power boards is that they are not very efficient and
can struggle with higher power draw from IPS panel. This was an issue in my
berry GBC (middle one in the first photo), where the screen would randomly dim
to lowest brightness setting. That problem was solved by replacing original
power board with a modern one. I decided to do the same in this unit as well.</p>
<p>I began by disassembling the shell, disconnecting the screen ribbon and removing
the main board from the shell. Then I desoldered the power board and the
speaker:</p>
<div class="thumbnail">
<figure>
<a href="/images/posts/2023-01-23-gameboy_color_nes-themed_modkit_from_funnyplaying/before_desoldering.jpg"><img src="/images/posts/2023-01-23-gameboy_color_nes-themed_modkit_from_funnyplaying/before_desoldering_thumbnail.jpg" alt="shell_fit" /></a>
<figcaption>
Before desoldering.
</figcaption>
</figure>
</div>
<div class="thumbnail">
<figure>
<a href="/images/posts/2023-01-23-gameboy_color_nes-themed_modkit_from_funnyplaying/desoldering_done.jpg"><img src="/images/posts/2023-01-23-gameboy_color_nes-themed_modkit_from_funnyplaying/desoldering_done_thumbnail.jpg" alt="_" /></a>
<figcaption>
After desoldering the speaker and power board.
</figcaption>
</figure>
</div>
<p>I don’t have a desoldering gun and overall don’t feel too confident with
desoldering. This was something that has caused me the most trouble with past
mods, sometimes even requiring me to destroy the part being desoldered. That
being said, things went much smother this time and I managed to desolder both
the speaker and the power board without damaging them in any way.</p>
<p>Next I soldered in the speaker and the new power board:</p>
<div class="thumbnail">
<figure>
<a href="/images/posts/2023-01-23-gameboy_color_nes-themed_modkit_from_funnyplaying/soldered_power_board.jpg"><img src="/images/posts/2023-01-23-gameboy_color_nes-themed_modkit_from_funnyplaying/soldered_power_board_thumbnail.jpg" alt="_" /></a>
<figcaption>
New power board and speaker soldered in place.
</figcaption>
</figure>
</div>
<p>FunnyPlaying instructs clients to test the IPS panel before soldering anything
to the ribbon like so:</p>
<div class="thumbnail">
<figure>
<a href="/images/posts/2023-01-23-gameboy_color_nes-themed_modkit_from_funnyplaying/screen_test.jpg"><img src="/images/posts/2023-01-23-gameboy_color_nes-themed_modkit_from_funnyplaying/screen_test_thumbnail.jpg" alt="_" /></a>
<figcaption>
Testing the screen when building the berry GBC.
</figcaption>
</figure>
</div>
<p>This was my next step. I connected the screen via the ribbon cable, attached
the back of the shell, which contains the battery compartment, powered on the
console and… nothing. The console seemed dead. No sound, no image on the
screen, and no light from the power LED. As the first debugging step I restored
the original speaker. After powering on the console sound was working, but the
screen still didn’t display anything. This has caused some serious head
scratching for me. At first I thought that perhaps the power board replacement
isn’t compatible with the IPS panel I was using, but then it dawned on me. The
screen mod used in this kit requires soldering a wire between the ribbon cable
and the power switch. After reading the description on the FunnyPlaying’s
website it turns out that the ribbon cable has a built-in power supply and draws
current directly from the power switch to bypass the original power board. So
it seems that the modern power board that I installed might be completely
redundant. It also looks that it’s not possible to carry out FunnyPlaying’s
instructions of testing the board without soldering any wires. I decided to
take a leap of faith and solder all the wires where they should be. But before
proceeding with the wires I trimmed the pins on the cartridge slot:</p>
<div class="thumbnail">
<figure>
<a href="/images/posts/2023-01-23-gameboy_color_nes-themed_modkit_from_funnyplaying/cartridge_slot_pins.jpg"><img src="/images/posts/2023-01-23-gameboy_color_nes-themed_modkit_from_funnyplaying/cartridge_slot_pins_thumbnail.jpg" alt="_" /></a>
<figcaption>
Trimmed cartridge slot pins.
</figcaption>
</figure>
</div>
<p>While the instructions on FP website don’t mention this as a required step, I
think this is a reasonable safety measure to prevent the pins from pushing on
the ribbon cable. Other screen mods I made required this and I didn’t want to
take any risks. Next I installed the screen in the shell. This kit comes with
a laminated screen, meaning that the glass is already fixed to the IPS panel.
There’s no need to worry about screen alignment or any dust getting under the
glass. Once screen was in place I connected the ribbon cable to the motherboard
and soldered the wires for Select and Start buttons:</p>
<div class="thumbnail">
<figure>
<a href="/images/posts/2023-01-23-gameboy_color_nes-themed_modkit_from_funnyplaying/soldered_wires_1.jpg"><img src="/images/posts/2023-01-23-gameboy_color_nes-themed_modkit_from_funnyplaying/soldered_wires_1_thumbnail.jpg" alt="_" /></a>
<figcaption>
Wires soldered and secured with Kapton tape.
</figcaption>
</figure>
</div>
<div class="thumbnail">
<figure>
<a href="/images/posts/2023-01-23-gameboy_color_nes-themed_modkit_from_funnyplaying/soldered_wires_2.jpg"><img src="/images/posts/2023-01-23-gameboy_color_nes-themed_modkit_from_funnyplaying/soldered_wires_2_thumbnail.jpg" alt="_" /></a>
<figcaption>
Silicon pads in place. Note the security sticker is missing on the
back of the screen.
</figcaption>
</figure>
</div>
<p>As you can see I used lots of Kapton tape to:</p>
<ol type="1">
<li><p>Attach the ribbon cable to the back of the screen, so that it doesn’t move
around, and cover the exposed parts on top.</p></li>
<li><p>Attach Start and Select wires in place since they are significantly longer
than they need to be. In hindsight, I should have made those wires
shorter.</p></li>
<li><p>Secure cartridge slot pins.</p></li>
</ol>
<p>There’s one thing done incorrectly in these photos and I only realized that
after assembling the shell. Kit comes with a protective sticker that’s supposed
to be attached to the back of the screen to isolate the metal back from the
ribbon cable. There’s also a smaller sticker that, I’m guessing, is intended to
secure cartridge pins, but I already used Kapton tape for that. I didn’t want
to take any risk, so I disassembled the shell and applied the sticker, at least
to the degree it was possible.</p>
<p>Finally, I soldered the power cable and touch sensor, assembled the shell, and
applied the sticker to the back of the shell. Final result looks like this:</p>
<div class="thumbnail">
<figure>
<a href="/images/posts/2023-01-23-gameboy_color_nes-themed_modkit_from_funnyplaying/final_result_3.jpg"><img src="/images/posts/2023-01-23-gameboy_color_nes-themed_modkit_from_funnyplaying/final_result_3_thumbnail.jpg" alt="_" /></a>
<a href="/images/posts/2023-01-23-gameboy_color_nes-themed_modkit_from_funnyplaying/final_result_2.jpg"><img src="/images/posts/2023-01-23-gameboy_color_nes-themed_modkit_from_funnyplaying/final_result_2_thumbnail.jpg" alt="_" /></a>
<figcaption>
Front and back.
</figcaption>
</figure>
</div>
<p>Here’s my new GameBoy next to the ones I already owned:</p>
<div class="thumbnail">
<figure>
<a href="/images/posts/2023-01-23-gameboy_color_nes-themed_modkit_from_funnyplaying/final_result_1.jpg"><img src="/images/posts/2023-01-23-gameboy_color_nes-themed_modkit_from_funnyplaying/final_result_1_thumbnail.jpg" alt="_" /></a>
<figcaption>
My current collection of GameBoy Colors.
</figcaption>
</figure>
</div>
<h2 id="summary">Summary</h2>
<p>This kit was a very nice build. I really liked the laminated screen. It makes
building a lot faster and I no longer need to worry about dust or getting my
fingerprints where they shouldn’t be. The screen is also small in size so it
doesn’t require cutting the the silicon pads, as was the case with earlier
screens from FunnyPlaying:</p>
<div class="thumbnail">
<figure>
<a href="/images/posts/2023-01-23-gameboy_color_nes-themed_modkit_from_funnyplaying/cutting_silicon_pads.jpg"><img src="/images/posts/2023-01-23-gameboy_color_nes-themed_modkit_from_funnyplaying/cutting_silicon_pads_thumbnail.jpg" alt="_" /></a>
<figcaption>
Cutting silicon pad to accommodate larger IPS panel.
</figcaption>
</figure>
</div>
<p>Obviously, the shell is also designed specifically for this mod and doesn’t
require trimming the plastic. This is nice progress compared to earlier mods.</p>
<p>Of course if I were to build that kit again it would take me much less time. I
wasted quite a lot of time on figuring out why the screen doesn’t power on. It
also seems that the replacement power board isn’t necessary so I could have
skipped that as well.</p>
<p>I’m not sure why the replacement speaker didn’t work. I probably should have
given it another try after figuring out the screen issue, but at this point the
build was taken much longer than anticipated and I wanted to finish it ASAP.</p>
<p>One thing I was concerned about when buying the kit was the logo under the
screen. That logo is backlighted by the IPS panel itself. I was concerned that
it will be distracting while playing, but it really isn’t. And in case it is,
it can be disabled in the settings.</p>
<p>Speaking of settings, the screen offers several brightness levels (adjusted
using the touch sensor on top edge of the shell), several vertical scanline
modes as well as RetroPixel mode. In this mode the screen displays a grid
that imitates pixel grid seen on older displays:</p>
<div class="thumbnail">
<figure>
<a href="/images/posts/2023-01-23-gameboy_color_nes-themed_modkit_from_funnyplaying/retro_pixels.jpg"><img src="/images/posts/2023-01-23-gameboy_color_nes-themed_modkit_from_funnyplaying/retro_pixels_thumbnail.jpg" alt="_" /></a>
<figcaption>
RetroPixels mode in action.
</figcaption>
</figure>
</div>
<p>This is possible because the IPS panel has higher pixel density, with each
original pixel being represented by a 5 by 5 square of pixels. According to
information on FunnyPlaying’s website and other places on the web it should also
be possible to adjust vertical and horizontal position of the display area, but
for some reason this does not work in my unit. Perhaps these settings are
disabled when laminated screen is used?</p>
<p>Overall, I am very happy with the final result. The shell looks great and the
larger screen is really impressive. I am yet to test how long the batteries
last.</p>
<section id="footnotes" class="footnotes footnotes-end-of-document" role="doc-endnotes">
<hr />
<ol>
<li id="fn1"><p>Note that the power board is made by a company that has <a href="https://old.reddit.com/r/Gameboy/comments/ktbgnf/retrosix_is_stealing_other_peoples_work_and/">very bad
reputation in the retro
community</a>
and I have made a point not to buy from them again.<a href="#fnref1" class="footnote-back" role="doc-backlink">↩︎</a></p></li>
</ol>
</section>

        <p><a href="../blog.html">Back</a></p>
    </section>
</article>
]]></description>
    <pubDate>Mon, 23 Jan 2023 00:00:00 UT</pubDate>
    <guid>https://jstolarek.github.io/posts/2023-01-23-gameboy-color-nes-themed-modkit-from-funnyplaying.html</guid>
    <dc:creator>Jan Stolarek</dc:creator>
</item>
<item>
    <title>Playing Final Fantasy IX for the first time in 2022</title>
    <link>https://jstolarek.github.io/posts/2023-01-11-playing-final-fantasy-ix-for-the-first-time-in-2022.html</link>
    <description><![CDATA[<article>
    <section class="header">
        Posted on 11/01/2023
    </section>
    <section>
        <h1 id="playing-final-fantasy-ix-for-the-first-time-in-2022">Playing Final Fantasy IX for the first time in 2022</h1>
<p>My gaming in 2022 wad dominated by two franchises: Final Fantasy and Metroid. I
re-played Super Metroid and Final Fantasy VI on original hardware, finished
Metroid Dread and Final Fantasy VII Remake, both latest entries in the series.
Finally, I managed to beat Samues: Metroid Returns, Metroid Prime 2 and Final
Fantasy IX. Today I want to talk about Final Fantasy IX, while it remains fresh
in my mind, leaving other mentioned games for possible retrospective posts
sometime in the future. I have had FFIX on my bucket list for a couple of years
now. I made one attempt at playing it around three years ago, but stalled about
four hours into the game. Four weeks ago I made a completely spontaneous
decision to play FFIX and this time the playthrough went smoothly right to the
end.</p>
<div class="thumbnail">
<figure>
<a href="/images/posts/2023-01-11-playing_final_fantasy-ix-for-the-first-time-in-2022/physical_copy.jpg"><img src="/images/posts/2023-01-11-playing_final_fantasy-ix-for-the-first-time-in-2022/physical_copy_thumbnail.jpg" alt="final_fantasy_ix_physical_copy" /></a>
<figcaption>
A Japanese copy of Final Fantasy IX in my collection. Game comes on
four CDs.
</figcaption>
</figure>
</div>
<p>Final Fantasy IX is sometimes described as a “love letter to earlier entries in
the series” and a “return to the roots”. Indeed, after three earlier
instalments being placed in worlds that were more and more gravitating towards
sci-fi setting, this entry returns to fantasy roots seen in first five parts of
Final Fantasy. Of course when I say “fantasy” I mean “fantasy with airships”.
It wouldn’t be Final Fantasy otherwise!</p>
<div class="thumbnail">
<figure>
<a href="/images/posts/2023-01-11-playing_final_fantasy-ix-for-the-first-time-in-2022/title_screen.png"><img src="/images/posts/2023-01-11-playing_final_fantasy-ix-for-the-first-time-in-2022/title_screen_thumbnail.jpg" alt="final_fantasy_ix_title_screen" /></a>
<figcaption>
Final Fantasy IX title screen.
</figcaption>
</figure>
</div>
<p>Final Fantasy IX has interesting story and great character writing. It was
Final Fantasy VII that became famous for their characters (few gamers haven’t
heard about Cloud or Aerith), but FFIX is equally good. Characters have their
own unique personalities and motivations, with my personal favourite being Vivi.
One notable exception to quality of character writing is Amarant. He has no
backstory, no purpose, no motivation behind his actions, and almost no
personality. Many of the game’s NPCs are written in more detail than him.
Amarant only serves as a pretext to have some lines about importance of working
with others. Overall he feels like an afterthought and the game would probably
be better without him. I also have a minor nitpick about Eiko. While she’s a
great character, according to the game story she’s only six years old. Except
that her words and actions certainly don’t fit a child. In particular her
initial fixation on having a romantic relationship with Zidane is weird, to say
the least.</p>
<div class="thumbnail">
<figure>
<a href="/images/posts/2023-01-11-playing_final_fantasy-ix-for-the-first-time-in-2022/gameplay.png"><img src="/images/posts/2023-01-11-playing_final_fantasy-ix-for-the-first-time-in-2022/gameplay_thumbnail.jpg" alt="final_fantasy_ix_steiner" /></a>
<figcaption>
Just Steiner things.
</figcaption>
</figure>
</div>
<p>When it comes to character progression system, each character has an assigned
class. Those classes will be familiar to FF veterans (Black Mage, White Mage,
Thief, etc.), but in FFIX these classes come with a twist as each character now
has access to two types of class-specific commands. And so for example Zidane,
Freya, and Amarant have their typical class-based commands (Steal for thief
Zidane, Jump for dragon knight Freya and Throw for ninja Amarant) but each of
them also has access to unique spells only they can use in battle. Similarly
white mages Dagger and Eiko are now also Summoners, each of them having a
different set of summoning spells, while black mage Vivi can Focus to make his
spell in the next turn more powerful. Each character can also learn static
abilities that can be equipped from the menu between battles:</p>
<div class="thumbnail">
<figure>
<a href="/images/posts/2023-01-11-playing_final_fantasy-ix-for-the-first-time-in-2022/abilities.png"><img src="/images/posts/2023-01-11-playing_final_fantasy-ix-for-the-first-time-in-2022/abilities_thumbnail.jpg" alt="final_fantasy_ix_abilities_menu" /></a>
<figcaption>
Early game abilities.
</figcaption>
</figure>
</div>
<p>All abilities - both class-specific spells as well as static abilities - are
learned from equipment items (weapons, armours, accessories, etc.), similarly to
how magic was learned from Espers in Final Fantasy VI. And similarly to magic
system from FFVI I often found myself changing the equipment after every single
battle because one of the characters learned a new ability and I wanted to equip
them with something different so that they begin learning a new ability. There
were moments when this became a bit tedious but overall it wasn’t a big deal.
Overall the ability system is fairly simple and doesn’t really offer any freedom
when it comes to character builds.</p>
<p>When it comes to battles, Final Fantasy IX uses a classic turn based ATB (Active
Time Battle) system, where characters wait until their action gauge fills up
(how fast this happens depends on character’s speed) and once it does they can
execute their action. The “Active” part of ATB means that enemies are allowed
to attack while the player is selecting actions from the menu, putting some
extra pressure on the player to act fast. This however always remained optional
and when playing Final Fantasies I have always disabled the “active” part of
ATB, allowing me to pick actions on my turn without rush.</p>
<p>Unfortunately, I don’t have anything good to say about implementation of ATB in
Final Fantasy IX. Earlier entries in the series got the ATB system right but
for some reason FFIX gets it wrong. In FFIX enemies seem to be largely
unaffected by ATB turn order. They perform actions at arbitrary moments, often
attacking several times in a row or in between series of attacks that one would
think should not be interruptible, e.g. character casting two spells as part of
Trance. (More on Trance below.) This completely destroys flow of battle and
derails decision making process in player’s head. In the time between the
decision to execute a particular action to the time of actually executing that
decision situation on the battlefield can change completely. This is further
exacerbated by various time-based effects, such as poison or regen, that work in
real-time rather than working in turn-time. This completely breaks balance of
poison an regen, among other things. For example, your character gets poisoned
and you use Antidote on them immediately. Oh, but some time earlier you also
decided to cast Bahamut, a powerful summon spell with lengthy animation, and it
gets cast now. Well, bad luck. Poisoned character will likely die because
their life drops every few seconds during summon animation. Conversely, Regen
status has become extremely overpowered. Especially with Auto-Regen ability
characters are able to recover most of their HP during spell animations, making
end-game significantly easier than it probably should be. And lastly,
pre-emptive strikes are also broken. During a pre-emptive strike your party
attacks enemy from behind - this happens randomly once in a while - and all of
your party members should be able to execute their attacks before enemies’ ATB
timer even starts ticking. Again, this is not the case in Final Fantasy IX.
During a pre-emptive strike it is not uncommon to have enemy attack right after
your first attack and before the rest of your team gets a chance to attack, thus
completely missing the point of a pre-emptive strike.</p>
<p>And then there’s questionable Trance mechanic to top it all. Trance is like
Limit Break in Final Fantasy VII or Overdrive in Final Fantasy X. As character
gets attacked a special gauge fills up and once the gauge is full character gets
access to a powerful special move. Trance is a bit different in that, rather
than being a single move, it lasts for several turns and for its duration allows
to execute special moves. For example Vivi can cast two spells on his turn
while Dagger’s summoning spells become more powerful. This is all fine. The
real problem with Trance is that it activates automatically when the Trance
gauge is full. The player has therefore absolutely no control over Trance
activation. As a result Trances get activated at completely random times, for
example during irrelevant world map battle, or right before a boss fight, or
right at the end of a fight giving character no chance to make any use of
Trance. As a result player has not strategic control over Trance and the whole
mechanic becomes a completely random bonus that only works occasionally. This
is in stark contrast with Limit Breaks in Final Fantasy VII, where charging them
up was one of techniques to help with boss fights.</p>
<p>Another aspect of the game that I also found slightly disappointing is the
music. As usually it was composed by Nobuo Uematsu but, compared to his other
works, music in FFIX feels very average. There are memorable themes once in a
while - Freya’s theme is a masterpiece! - but the music tracks player gets to
hear most often - battle theme, boss theme, world map theme - are meh.
Apparently some music tracks are adaptations of themes from Final Fantasies I,
II, and III, but I haven’t played those entries yet and only realized this from
reading the internet.</p>
<p>As with other Final Fantasy games, this one also has a lot of sidequests. I
have to admit I spectacularly missed some of them, including all Chocobo quests.
I also completely ignored the existence of Tetra Master mini card game, which I
found quite confusing and didn’t bother to search for rule explanation online.
Despite that the game took me 47 hours start to finish, which is more than it
took me to beat Final Fantasy VII when I replayed it four years ago. I played
most of Final Fantasy IX by emulating on Recalbox with RGB Dual. As outlined
<a href="https://jstolarek.github.io/posts/2022-12-26-recalbox-rgb-dual-some-impressions-after-six-months-of-usage.html">in my earlier
post</a>
I’ve run into performance problems, especially on the world map. I won’t hide
this hindered my experience and was one of the reasons I wasn’t keen on
exploring the world if I didn’t have to. For the last quarter of the game I
transferred the save file to my PS Vita, which required using online save
converter since the memory card format is different on the Vita, and played
while on a Christmas holiday trip. I gotta say this was a pretty fun thing to
do. I love how emulation and modding allow to achieve things not possible with
original hardware.</p>
<p>Well, that was quite a bit of complaining on my side. But do I regret playing?
Absolutely not! The story, characters, and the presented world make up for all
the shortcomings of battle system and unexceptional skill system. This is
definitely a good entry in the series and I am very happy to have finally played
it. I regret that I was unable to play FFIX 20 years ago when it came out. But
even playing it now was an unforgettable experience.</p>

        <p><a href="../blog.html">Back</a></p>
    </section>
</article>
]]></description>
    <pubDate>Wed, 11 Jan 2023 00:00:00 UT</pubDate>
    <guid>https://jstolarek.github.io/posts/2023-01-11-playing-final-fantasy-ix-for-the-first-time-in-2022.html</guid>
    <dc:creator>Jan Stolarek</dc:creator>
</item>

    </channel>
</rss>
